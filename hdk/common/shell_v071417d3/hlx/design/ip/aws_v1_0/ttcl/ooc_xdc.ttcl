<: set CompName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileName ${CompName}_ooc :>
<: setFileExtension ".xdc" :>
<: setFileUsedIn { out_of_context synthesis implementation } :>
<: set CLOCK_A0_PERIOD [getIntValue "C_CLOCK_A0_PERIOD" ] :> 
<: set CLOCK_B0_PERIOD [getIntValue "C_CLOCK_B0_PERIOD" ] :> 
<: set CLOCK_C0_PERIOD [getIntValue "C_CLOCK_C0_PERIOD" ] :> 
<: set CLOCK_A_RECIPE [getIntValue "C_CLOCK_A_RECIPE" ] :> 
<: set CLOCK_B_RECIPE [getIntValue "C_CLOCK_B_RECIPE" ] :> 
<: set CLOCK_C_RECIPE [getIntValue "C_CLOCK_C_RECIPE" ] :> 
<: set NUM_A_CLOCKS [getIntValue "C_NUM_A_CLOCKS" ] :> 
<: set NUM_B_CLOCKS [getIntValue "C_NUM_B_CLOCKS" ] :> 
<: set NUM_C_CLOCKS [getIntValue "C_NUM_C_CLOCKS" ] :> 
<: set CLOCK_A1_MULT [lindex [list 2 2 1] $CLOCK_A_RECIPE] :> 
<: set CLOCK_A2_MULT [lindex [list 2 2 1] $CLOCK_A_RECIPE] :> 
<: set CLOCK_A3_MULT [lindex [list 1 1 1] $CLOCK_A_RECIPE] :> 
<: set CLOCK_B1_MULT [lindex [list 2 2 2 4 4 4] $CLOCK_B_RECIPE] :> 
<: set CLOCK_C1_MULT [lindex [list 5 3 3 3] $CLOCK_C_RECIPE] :> 
<: set CLOCK_A1_DIV [lindex [list 1 1 1] $CLOCK_A_RECIPE] :> 
<: set CLOCK_A2_DIV [lindex [list 3 3 8] $CLOCK_A_RECIPE] :> 
<: set CLOCK_A3_DIV [lindex [list 2 2 4] $CLOCK_A_RECIPE] :> 
<: set CLOCK_B1_DIV [lindex [list 1 1 1 1 1 1] $CLOCK_B_RECIPE] :> 
<: set CLOCK_C1_DIV [lindex [list 4 4 4 4] $CLOCK_C_RECIPE] :> 
################################################################################
# (c) Copyright 2017 Xilinx, Inc. All rights reserved.
# 
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
# 
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
# 
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
# 
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

create_clock           -name clk_main_a0_ooc  -period <=:CLOCK_A0_PERIOD:> [get_ports clk_main_a0]
<: if {$NUM_A_CLOCKS>1} { :>
create_generated_clock -name clk_extra_a1_ooc -multiply_by <=:CLOCK_A1_MULT:> -divide_by <=:CLOCK_A1_DIV:> -source [get_ports clk_main_a0] [get_ports clk_extra_a1]
<: } :>
<: if {$NUM_A_CLOCKS>2} { :>
create_generated_clock -name clk_extra_a2_ooc -multiply_by <=:CLOCK_A2_MULT:> -divide_by <=:CLOCK_A2_DIV:> -source [get_ports clk_main_a0] [get_ports clk_extra_a2]
<: } :>
<: if {$NUM_A_CLOCKS>3} { :>
create_generated_clock -name clk_extra_a3_ooc -multiply_by <=:CLOCK_A3_MULT:> -divide_by <=:CLOCK_A3_DIV:> -source [get_ports clk_main_a0] [get_ports clk_extra_a3]
<: } :>
<: if {$NUM_B_CLOCKS>0} { :>
create_clock           -name clk_extra_b0_ooc -period <=:CLOCK_B0_PERIOD:> [get_ports clk_extra_b0]
<: } :>
<: if {$NUM_B_CLOCKS>1} { :>
create_generated_clock -name clk_extra_b1_ooc -multiply_by <=:CLOCK_B1_MULT:> -divide_by <=:CLOCK_B1_DIV:> -source [get_ports clk_extra_b0] [get_ports clk_extra_b1]
<: } :>
<: if {$NUM_C_CLOCKS>0} { :>
create_clock           -name clk_extra_c0_ooc -period <=:CLOCK_C0_PERIOD:> [get_ports clk_extra_c0]
<: } :>
<: if {$NUM_C_CLOCKS>1} { :>
create_generated_clock -name clk_extra_c1_ooc -multiply_by <=:CLOCK_C1_MULT:> -divide_by <=:CLOCK_C1_DIV:> -source [get_ports clk_extra_c0] [get_ports clk_extra_c1]
<: } :>
