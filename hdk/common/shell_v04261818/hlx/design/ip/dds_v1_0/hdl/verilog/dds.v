// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dds,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.100000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=2,HLS_SYN_FF=2200,HLS_SYN_LUT=2536}" *)

module dds (
        ap_clk,
        ap_rst_n,
        m_axi_DDS_OUTPUT_AWVALID,
        m_axi_DDS_OUTPUT_AWREADY,
        m_axi_DDS_OUTPUT_AWADDR,
        m_axi_DDS_OUTPUT_AWID,
        m_axi_DDS_OUTPUT_AWLEN,
        m_axi_DDS_OUTPUT_AWSIZE,
        m_axi_DDS_OUTPUT_AWBURST,
        m_axi_DDS_OUTPUT_AWLOCK,
        m_axi_DDS_OUTPUT_AWCACHE,
        m_axi_DDS_OUTPUT_AWPROT,
        m_axi_DDS_OUTPUT_AWQOS,
        m_axi_DDS_OUTPUT_AWREGION,
        m_axi_DDS_OUTPUT_AWUSER,
        m_axi_DDS_OUTPUT_WVALID,
        m_axi_DDS_OUTPUT_WREADY,
        m_axi_DDS_OUTPUT_WDATA,
        m_axi_DDS_OUTPUT_WSTRB,
        m_axi_DDS_OUTPUT_WLAST,
        m_axi_DDS_OUTPUT_WID,
        m_axi_DDS_OUTPUT_WUSER,
        m_axi_DDS_OUTPUT_ARVALID,
        m_axi_DDS_OUTPUT_ARREADY,
        m_axi_DDS_OUTPUT_ARADDR,
        m_axi_DDS_OUTPUT_ARID,
        m_axi_DDS_OUTPUT_ARLEN,
        m_axi_DDS_OUTPUT_ARSIZE,
        m_axi_DDS_OUTPUT_ARBURST,
        m_axi_DDS_OUTPUT_ARLOCK,
        m_axi_DDS_OUTPUT_ARCACHE,
        m_axi_DDS_OUTPUT_ARPROT,
        m_axi_DDS_OUTPUT_ARQOS,
        m_axi_DDS_OUTPUT_ARREGION,
        m_axi_DDS_OUTPUT_ARUSER,
        m_axi_DDS_OUTPUT_RVALID,
        m_axi_DDS_OUTPUT_RREADY,
        m_axi_DDS_OUTPUT_RDATA,
        m_axi_DDS_OUTPUT_RLAST,
        m_axi_DDS_OUTPUT_RID,
        m_axi_DDS_OUTPUT_RUSER,
        m_axi_DDS_OUTPUT_RRESP,
        m_axi_DDS_OUTPUT_BVALID,
        m_axi_DDS_OUTPUT_BREADY,
        m_axi_DDS_OUTPUT_BRESP,
        m_axi_DDS_OUTPUT_BID,
        m_axi_DDS_OUTPUT_BUSER,
        m_axi_DDS_OUTPUT1_AWVALID,
        m_axi_DDS_OUTPUT1_AWREADY,
        m_axi_DDS_OUTPUT1_AWADDR,
        m_axi_DDS_OUTPUT1_AWID,
        m_axi_DDS_OUTPUT1_AWLEN,
        m_axi_DDS_OUTPUT1_AWSIZE,
        m_axi_DDS_OUTPUT1_AWBURST,
        m_axi_DDS_OUTPUT1_AWLOCK,
        m_axi_DDS_OUTPUT1_AWCACHE,
        m_axi_DDS_OUTPUT1_AWPROT,
        m_axi_DDS_OUTPUT1_AWQOS,
        m_axi_DDS_OUTPUT1_AWREGION,
        m_axi_DDS_OUTPUT1_AWUSER,
        m_axi_DDS_OUTPUT1_WVALID,
        m_axi_DDS_OUTPUT1_WREADY,
        m_axi_DDS_OUTPUT1_WDATA,
        m_axi_DDS_OUTPUT1_WSTRB,
        m_axi_DDS_OUTPUT1_WLAST,
        m_axi_DDS_OUTPUT1_WID,
        m_axi_DDS_OUTPUT1_WUSER,
        m_axi_DDS_OUTPUT1_ARVALID,
        m_axi_DDS_OUTPUT1_ARREADY,
        m_axi_DDS_OUTPUT1_ARADDR,
        m_axi_DDS_OUTPUT1_ARID,
        m_axi_DDS_OUTPUT1_ARLEN,
        m_axi_DDS_OUTPUT1_ARSIZE,
        m_axi_DDS_OUTPUT1_ARBURST,
        m_axi_DDS_OUTPUT1_ARLOCK,
        m_axi_DDS_OUTPUT1_ARCACHE,
        m_axi_DDS_OUTPUT1_ARPROT,
        m_axi_DDS_OUTPUT1_ARQOS,
        m_axi_DDS_OUTPUT1_ARREGION,
        m_axi_DDS_OUTPUT1_ARUSER,
        m_axi_DDS_OUTPUT1_RVALID,
        m_axi_DDS_OUTPUT1_RREADY,
        m_axi_DDS_OUTPUT1_RDATA,
        m_axi_DDS_OUTPUT1_RLAST,
        m_axi_DDS_OUTPUT1_RID,
        m_axi_DDS_OUTPUT1_RUSER,
        m_axi_DDS_OUTPUT1_RRESP,
        m_axi_DDS_OUTPUT1_BVALID,
        m_axi_DDS_OUTPUT1_BREADY,
        m_axi_DDS_OUTPUT1_BRESP,
        m_axi_DDS_OUTPUT1_BID,
        m_axi_DDS_OUTPUT1_BUSER,
        s_axi_PROG_BUS_AWVALID,
        s_axi_PROG_BUS_AWREADY,
        s_axi_PROG_BUS_AWADDR,
        s_axi_PROG_BUS_WVALID,
        s_axi_PROG_BUS_WREADY,
        s_axi_PROG_BUS_WDATA,
        s_axi_PROG_BUS_WSTRB,
        s_axi_PROG_BUS_ARVALID,
        s_axi_PROG_BUS_ARREADY,
        s_axi_PROG_BUS_ARADDR,
        s_axi_PROG_BUS_RVALID,
        s_axi_PROG_BUS_RREADY,
        s_axi_PROG_BUS_RDATA,
        s_axi_PROG_BUS_RRESP,
        s_axi_PROG_BUS_BVALID,
        s_axi_PROG_BUS_BREADY,
        s_axi_PROG_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 3'b1;
parameter    ap_ST_fsm_state2 = 3'b10;
parameter    ap_ST_fsm_state3 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_PROG_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_PROG_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT_ID_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT_DATA_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT_TARGET_ADDR = 0;
parameter    C_M_AXI_DDS_OUTPUT_USER_VALUE = 0;
parameter    C_M_AXI_DDS_OUTPUT_PROT_VALUE = 0;
parameter    C_M_AXI_DDS_OUTPUT_CACHE_VALUE = 3;
parameter    C_M_AXI_DDS_OUTPUT1_ID_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_ADDR_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT1_DATA_WIDTH = 32;
parameter    C_M_AXI_DDS_OUTPUT1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_WUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_RUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_BUSER_WIDTH = 1;
parameter    C_M_AXI_DDS_OUTPUT1_TARGET_ADDR = 0;
parameter    C_M_AXI_DDS_OUTPUT1_USER_VALUE = 0;
parameter    C_M_AXI_DDS_OUTPUT1_PROT_VALUE = 0;
parameter    C_M_AXI_DDS_OUTPUT1_CACHE_VALUE = 3;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;

parameter C_S_AXI_PROG_BUS_WSTRB_WIDTH = (C_S_AXI_PROG_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_DDS_OUTPUT_WSTRB_WIDTH = (C_M_AXI_DDS_OUTPUT_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_DDS_OUTPUT1_WSTRB_WIDTH = (C_M_AXI_DDS_OUTPUT1_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_DDS_OUTPUT_AWVALID;
input   m_axi_DDS_OUTPUT_AWREADY;
output  [C_M_AXI_DDS_OUTPUT_ADDR_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_AWADDR;
output  [C_M_AXI_DDS_OUTPUT_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_AWID;
output  [7:0] m_axi_DDS_OUTPUT_AWLEN;
output  [2:0] m_axi_DDS_OUTPUT_AWSIZE;
output  [1:0] m_axi_DDS_OUTPUT_AWBURST;
output  [1:0] m_axi_DDS_OUTPUT_AWLOCK;
output  [3:0] m_axi_DDS_OUTPUT_AWCACHE;
output  [2:0] m_axi_DDS_OUTPUT_AWPROT;
output  [3:0] m_axi_DDS_OUTPUT_AWQOS;
output  [3:0] m_axi_DDS_OUTPUT_AWREGION;
output  [C_M_AXI_DDS_OUTPUT_AWUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_AWUSER;
output   m_axi_DDS_OUTPUT_WVALID;
input   m_axi_DDS_OUTPUT_WREADY;
output  [C_M_AXI_DDS_OUTPUT_DATA_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_WDATA;
output  [C_M_AXI_DDS_OUTPUT_WSTRB_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_WSTRB;
output   m_axi_DDS_OUTPUT_WLAST;
output  [C_M_AXI_DDS_OUTPUT_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_WID;
output  [C_M_AXI_DDS_OUTPUT_WUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_WUSER;
output   m_axi_DDS_OUTPUT_ARVALID;
input   m_axi_DDS_OUTPUT_ARREADY;
output  [C_M_AXI_DDS_OUTPUT_ADDR_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_ARADDR;
output  [C_M_AXI_DDS_OUTPUT_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_ARID;
output  [7:0] m_axi_DDS_OUTPUT_ARLEN;
output  [2:0] m_axi_DDS_OUTPUT_ARSIZE;
output  [1:0] m_axi_DDS_OUTPUT_ARBURST;
output  [1:0] m_axi_DDS_OUTPUT_ARLOCK;
output  [3:0] m_axi_DDS_OUTPUT_ARCACHE;
output  [2:0] m_axi_DDS_OUTPUT_ARPROT;
output  [3:0] m_axi_DDS_OUTPUT_ARQOS;
output  [3:0] m_axi_DDS_OUTPUT_ARREGION;
output  [C_M_AXI_DDS_OUTPUT_ARUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_ARUSER;
input   m_axi_DDS_OUTPUT_RVALID;
output   m_axi_DDS_OUTPUT_RREADY;
input  [C_M_AXI_DDS_OUTPUT_DATA_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_RDATA;
input   m_axi_DDS_OUTPUT_RLAST;
input  [C_M_AXI_DDS_OUTPUT_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_RID;
input  [C_M_AXI_DDS_OUTPUT_RUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_RUSER;
input  [1:0] m_axi_DDS_OUTPUT_RRESP;
input   m_axi_DDS_OUTPUT_BVALID;
output   m_axi_DDS_OUTPUT_BREADY;
input  [1:0] m_axi_DDS_OUTPUT_BRESP;
input  [C_M_AXI_DDS_OUTPUT_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_BID;
input  [C_M_AXI_DDS_OUTPUT_BUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT_BUSER;
output   m_axi_DDS_OUTPUT1_AWVALID;
input   m_axi_DDS_OUTPUT1_AWREADY;
output  [C_M_AXI_DDS_OUTPUT1_ADDR_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_AWADDR;
output  [C_M_AXI_DDS_OUTPUT1_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_AWID;
output  [7:0] m_axi_DDS_OUTPUT1_AWLEN;
output  [2:0] m_axi_DDS_OUTPUT1_AWSIZE;
output  [1:0] m_axi_DDS_OUTPUT1_AWBURST;
output  [1:0] m_axi_DDS_OUTPUT1_AWLOCK;
output  [3:0] m_axi_DDS_OUTPUT1_AWCACHE;
output  [2:0] m_axi_DDS_OUTPUT1_AWPROT;
output  [3:0] m_axi_DDS_OUTPUT1_AWQOS;
output  [3:0] m_axi_DDS_OUTPUT1_AWREGION;
output  [C_M_AXI_DDS_OUTPUT1_AWUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_AWUSER;
output   m_axi_DDS_OUTPUT1_WVALID;
input   m_axi_DDS_OUTPUT1_WREADY;
output  [C_M_AXI_DDS_OUTPUT1_DATA_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_WDATA;
output  [C_M_AXI_DDS_OUTPUT1_WSTRB_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_WSTRB;
output   m_axi_DDS_OUTPUT1_WLAST;
output  [C_M_AXI_DDS_OUTPUT1_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_WID;
output  [C_M_AXI_DDS_OUTPUT1_WUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_WUSER;
output   m_axi_DDS_OUTPUT1_ARVALID;
input   m_axi_DDS_OUTPUT1_ARREADY;
output  [C_M_AXI_DDS_OUTPUT1_ADDR_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_ARADDR;
output  [C_M_AXI_DDS_OUTPUT1_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_ARID;
output  [7:0] m_axi_DDS_OUTPUT1_ARLEN;
output  [2:0] m_axi_DDS_OUTPUT1_ARSIZE;
output  [1:0] m_axi_DDS_OUTPUT1_ARBURST;
output  [1:0] m_axi_DDS_OUTPUT1_ARLOCK;
output  [3:0] m_axi_DDS_OUTPUT1_ARCACHE;
output  [2:0] m_axi_DDS_OUTPUT1_ARPROT;
output  [3:0] m_axi_DDS_OUTPUT1_ARQOS;
output  [3:0] m_axi_DDS_OUTPUT1_ARREGION;
output  [C_M_AXI_DDS_OUTPUT1_ARUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_ARUSER;
input   m_axi_DDS_OUTPUT1_RVALID;
output   m_axi_DDS_OUTPUT1_RREADY;
input  [C_M_AXI_DDS_OUTPUT1_DATA_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_RDATA;
input   m_axi_DDS_OUTPUT1_RLAST;
input  [C_M_AXI_DDS_OUTPUT1_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_RID;
input  [C_M_AXI_DDS_OUTPUT1_RUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_RUSER;
input  [1:0] m_axi_DDS_OUTPUT1_RRESP;
input   m_axi_DDS_OUTPUT1_BVALID;
output   m_axi_DDS_OUTPUT1_BREADY;
input  [1:0] m_axi_DDS_OUTPUT1_BRESP;
input  [C_M_AXI_DDS_OUTPUT1_ID_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_BID;
input  [C_M_AXI_DDS_OUTPUT1_BUSER_WIDTH - 1 : 0] m_axi_DDS_OUTPUT1_BUSER;
input   s_axi_PROG_BUS_AWVALID;
output   s_axi_PROG_BUS_AWREADY;
input  [C_S_AXI_PROG_BUS_ADDR_WIDTH - 1 : 0] s_axi_PROG_BUS_AWADDR;
input   s_axi_PROG_BUS_WVALID;
output   s_axi_PROG_BUS_WREADY;
input  [C_S_AXI_PROG_BUS_DATA_WIDTH - 1 : 0] s_axi_PROG_BUS_WDATA;
input  [C_S_AXI_PROG_BUS_WSTRB_WIDTH - 1 : 0] s_axi_PROG_BUS_WSTRB;
input   s_axi_PROG_BUS_ARVALID;
output   s_axi_PROG_BUS_ARREADY;
input  [C_S_AXI_PROG_BUS_ADDR_WIDTH - 1 : 0] s_axi_PROG_BUS_ARADDR;
output   s_axi_PROG_BUS_RVALID;
input   s_axi_PROG_BUS_RREADY;
output  [C_S_AXI_PROG_BUS_DATA_WIDTH - 1 : 0] s_axi_PROG_BUS_RDATA;
output  [1:0] s_axi_PROG_BUS_RRESP;
output   s_axi_PROG_BUS_BVALID;
input   s_axi_PROG_BUS_BREADY;
output  [1:0] s_axi_PROG_BUS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] nofSample;
wire   [31:0] incr_V;
reg    DDS_OUTPUT_AWVALID;
wire    DDS_OUTPUT_AWREADY;
reg    DDS_OUTPUT_WVALID;
wire    DDS_OUTPUT_WREADY;
wire    DDS_OUTPUT_ARREADY;
wire    DDS_OUTPUT_RVALID;
wire   [15:0] DDS_OUTPUT_RDATA;
wire    DDS_OUTPUT_RLAST;
wire   [0:0] DDS_OUTPUT_RID;
wire   [0:0] DDS_OUTPUT_RUSER;
wire   [1:0] DDS_OUTPUT_RRESP;
wire    DDS_OUTPUT_BVALID;
reg    DDS_OUTPUT_BREADY;
wire   [1:0] DDS_OUTPUT_BRESP;
wire   [0:0] DDS_OUTPUT_BID;
wire   [0:0] DDS_OUTPUT_BUSER;
reg    DDS_OUTPUT1_AWVALID;
wire    DDS_OUTPUT1_AWREADY;
reg    DDS_OUTPUT1_WVALID;
wire    DDS_OUTPUT1_WREADY;
wire    DDS_OUTPUT1_ARREADY;
wire    DDS_OUTPUT1_RVALID;
wire   [15:0] DDS_OUTPUT1_RDATA;
wire    DDS_OUTPUT1_RLAST;
wire   [0:0] DDS_OUTPUT1_RID;
wire   [0:0] DDS_OUTPUT1_RUSER;
wire   [1:0] DDS_OUTPUT1_RRESP;
wire    DDS_OUTPUT1_BVALID;
reg    DDS_OUTPUT1_BREADY;
wire   [1:0] DDS_OUTPUT1_BRESP;
wire   [0:0] DDS_OUTPUT1_BID;
wire   [0:0] DDS_OUTPUT1_BUSER;
reg   [31:0] incr_V_read_reg_68;
reg   [31:0] nofSample_read_reg_73;
wire    grp_process_frame_fu_52_ap_start;
wire    grp_process_frame_fu_52_ap_done;
wire    grp_process_frame_fu_52_ap_idle;
wire    grp_process_frame_fu_52_ap_ready;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_AWVALID;
wire   [31:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWADDR;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWID;
wire   [31:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWLEN;
wire   [2:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWSIZE;
wire   [1:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWBURST;
wire   [1:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWLOCK;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWCACHE;
wire   [2:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWPROT;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWQOS;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWREGION;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_AWUSER;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_WVALID;
wire   [15:0] grp_process_frame_fu_52_m_axi_cos_out_V_WDATA;
wire   [1:0] grp_process_frame_fu_52_m_axi_cos_out_V_WSTRB;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_WLAST;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_WID;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_WUSER;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_ARVALID;
wire   [31:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARADDR;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARID;
wire   [31:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARLEN;
wire   [2:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARSIZE;
wire   [1:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARBURST;
wire   [1:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARLOCK;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARCACHE;
wire   [2:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARPROT;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARQOS;
wire   [3:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARREGION;
wire   [0:0] grp_process_frame_fu_52_m_axi_cos_out_V_ARUSER;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_RREADY;
wire    grp_process_frame_fu_52_m_axi_cos_out_V_BREADY;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_AWVALID;
wire   [31:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWADDR;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWID;
wire   [31:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWLEN;
wire   [2:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWSIZE;
wire   [1:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWBURST;
wire   [1:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWLOCK;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWCACHE;
wire   [2:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWPROT;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWQOS;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWREGION;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_AWUSER;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_WVALID;
wire   [15:0] grp_process_frame_fu_52_m_axi_sin_out_V_WDATA;
wire   [1:0] grp_process_frame_fu_52_m_axi_sin_out_V_WSTRB;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_WLAST;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_WID;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_WUSER;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_ARVALID;
wire   [31:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARADDR;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARID;
wire   [31:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARLEN;
wire   [2:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARSIZE;
wire   [1:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARBURST;
wire   [1:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARLOCK;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARCACHE;
wire   [2:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARPROT;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARQOS;
wire   [3:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARREGION;
wire   [0:0] grp_process_frame_fu_52_m_axi_sin_out_V_ARUSER;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_RREADY;
wire    grp_process_frame_fu_52_m_axi_sin_out_V_BREADY;
reg    ap_reg_grp_process_frame_fu_52_ap_start;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_grp_process_frame_fu_52_ap_start = 1'b0;
end

dds_PROG_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_PROG_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_PROG_BUS_DATA_WIDTH ))
dds_PROG_BUS_s_axi_U(
    .AWVALID(s_axi_PROG_BUS_AWVALID),
    .AWREADY(s_axi_PROG_BUS_AWREADY),
    .AWADDR(s_axi_PROG_BUS_AWADDR),
    .WVALID(s_axi_PROG_BUS_WVALID),
    .WREADY(s_axi_PROG_BUS_WREADY),
    .WDATA(s_axi_PROG_BUS_WDATA),
    .WSTRB(s_axi_PROG_BUS_WSTRB),
    .ARVALID(s_axi_PROG_BUS_ARVALID),
    .ARREADY(s_axi_PROG_BUS_ARREADY),
    .ARADDR(s_axi_PROG_BUS_ARADDR),
    .RVALID(s_axi_PROG_BUS_RVALID),
    .RREADY(s_axi_PROG_BUS_RREADY),
    .RDATA(s_axi_PROG_BUS_RDATA),
    .RRESP(s_axi_PROG_BUS_RRESP),
    .BVALID(s_axi_PROG_BUS_BVALID),
    .BREADY(s_axi_PROG_BUS_BREADY),
    .BRESP(s_axi_PROG_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .nofSample(nofSample),
    .incr_V(incr_V)
);

dds_DDS_OUTPUT_m_axi #(
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DDS_OUTPUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DDS_OUTPUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DDS_OUTPUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DDS_OUTPUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DDS_OUTPUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DDS_OUTPUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DDS_OUTPUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DDS_OUTPUT_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DDS_OUTPUT_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DDS_OUTPUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DDS_OUTPUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DDS_OUTPUT_CACHE_VALUE ))
dds_DDS_OUTPUT_m_axi_U(
    .AWVALID(m_axi_DDS_OUTPUT_AWVALID),
    .AWREADY(m_axi_DDS_OUTPUT_AWREADY),
    .AWADDR(m_axi_DDS_OUTPUT_AWADDR),
    .AWID(m_axi_DDS_OUTPUT_AWID),
    .AWLEN(m_axi_DDS_OUTPUT_AWLEN),
    .AWSIZE(m_axi_DDS_OUTPUT_AWSIZE),
    .AWBURST(m_axi_DDS_OUTPUT_AWBURST),
    .AWLOCK(m_axi_DDS_OUTPUT_AWLOCK),
    .AWCACHE(m_axi_DDS_OUTPUT_AWCACHE),
    .AWPROT(m_axi_DDS_OUTPUT_AWPROT),
    .AWQOS(m_axi_DDS_OUTPUT_AWQOS),
    .AWREGION(m_axi_DDS_OUTPUT_AWREGION),
    .AWUSER(m_axi_DDS_OUTPUT_AWUSER),
    .WVALID(m_axi_DDS_OUTPUT_WVALID),
    .WREADY(m_axi_DDS_OUTPUT_WREADY),
    .WDATA(m_axi_DDS_OUTPUT_WDATA),
    .WSTRB(m_axi_DDS_OUTPUT_WSTRB),
    .WLAST(m_axi_DDS_OUTPUT_WLAST),
    .WID(m_axi_DDS_OUTPUT_WID),
    .WUSER(m_axi_DDS_OUTPUT_WUSER),
    .ARVALID(m_axi_DDS_OUTPUT_ARVALID),
    .ARREADY(m_axi_DDS_OUTPUT_ARREADY),
    .ARADDR(m_axi_DDS_OUTPUT_ARADDR),
    .ARID(m_axi_DDS_OUTPUT_ARID),
    .ARLEN(m_axi_DDS_OUTPUT_ARLEN),
    .ARSIZE(m_axi_DDS_OUTPUT_ARSIZE),
    .ARBURST(m_axi_DDS_OUTPUT_ARBURST),
    .ARLOCK(m_axi_DDS_OUTPUT_ARLOCK),
    .ARCACHE(m_axi_DDS_OUTPUT_ARCACHE),
    .ARPROT(m_axi_DDS_OUTPUT_ARPROT),
    .ARQOS(m_axi_DDS_OUTPUT_ARQOS),
    .ARREGION(m_axi_DDS_OUTPUT_ARREGION),
    .ARUSER(m_axi_DDS_OUTPUT_ARUSER),
    .RVALID(m_axi_DDS_OUTPUT_RVALID),
    .RREADY(m_axi_DDS_OUTPUT_RREADY),
    .RDATA(m_axi_DDS_OUTPUT_RDATA),
    .RLAST(m_axi_DDS_OUTPUT_RLAST),
    .RID(m_axi_DDS_OUTPUT_RID),
    .RUSER(m_axi_DDS_OUTPUT_RUSER),
    .RRESP(m_axi_DDS_OUTPUT_RRESP),
    .BVALID(m_axi_DDS_OUTPUT_BVALID),
    .BREADY(m_axi_DDS_OUTPUT_BREADY),
    .BRESP(m_axi_DDS_OUTPUT_BRESP),
    .BID(m_axi_DDS_OUTPUT_BID),
    .BUSER(m_axi_DDS_OUTPUT_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(DDS_OUTPUT_ARREADY),
    .I_ARADDR(ap_const_lv32_0),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_0),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(DDS_OUTPUT_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(DDS_OUTPUT_RDATA),
    .I_RID(DDS_OUTPUT_RID),
    .I_RUSER(DDS_OUTPUT_RUSER),
    .I_RRESP(DDS_OUTPUT_RRESP),
    .I_RLAST(DDS_OUTPUT_RLAST),
    .I_AWVALID(DDS_OUTPUT_AWVALID),
    .I_AWREADY(DDS_OUTPUT_AWREADY),
    .I_AWADDR(grp_process_frame_fu_52_m_axi_cos_out_V_AWADDR),
    .I_AWID(grp_process_frame_fu_52_m_axi_cos_out_V_AWID),
    .I_AWLEN(grp_process_frame_fu_52_m_axi_cos_out_V_AWLEN),
    .I_AWSIZE(grp_process_frame_fu_52_m_axi_cos_out_V_AWSIZE),
    .I_AWLOCK(grp_process_frame_fu_52_m_axi_cos_out_V_AWLOCK),
    .I_AWCACHE(grp_process_frame_fu_52_m_axi_cos_out_V_AWCACHE),
    .I_AWQOS(grp_process_frame_fu_52_m_axi_cos_out_V_AWQOS),
    .I_AWPROT(grp_process_frame_fu_52_m_axi_cos_out_V_AWPROT),
    .I_AWUSER(grp_process_frame_fu_52_m_axi_cos_out_V_AWUSER),
    .I_AWBURST(grp_process_frame_fu_52_m_axi_cos_out_V_AWBURST),
    .I_AWREGION(grp_process_frame_fu_52_m_axi_cos_out_V_AWREGION),
    .I_WVALID(DDS_OUTPUT_WVALID),
    .I_WREADY(DDS_OUTPUT_WREADY),
    .I_WDATA(grp_process_frame_fu_52_m_axi_cos_out_V_WDATA),
    .I_WID(grp_process_frame_fu_52_m_axi_cos_out_V_WID),
    .I_WUSER(grp_process_frame_fu_52_m_axi_cos_out_V_WUSER),
    .I_WLAST(grp_process_frame_fu_52_m_axi_cos_out_V_WLAST),
    .I_WSTRB(grp_process_frame_fu_52_m_axi_cos_out_V_WSTRB),
    .I_BVALID(DDS_OUTPUT_BVALID),
    .I_BREADY(DDS_OUTPUT_BREADY),
    .I_BRESP(DDS_OUTPUT_BRESP),
    .I_BID(DDS_OUTPUT_BID),
    .I_BUSER(DDS_OUTPUT_BUSER)
);

dds_DDS_OUTPUT1_m_axi #(
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DDS_OUTPUT1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DDS_OUTPUT1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DDS_OUTPUT1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DDS_OUTPUT1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DDS_OUTPUT1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DDS_OUTPUT1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DDS_OUTPUT1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DDS_OUTPUT1_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DDS_OUTPUT1_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DDS_OUTPUT1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DDS_OUTPUT1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DDS_OUTPUT1_CACHE_VALUE ))
dds_DDS_OUTPUT1_m_axi_U(
    .AWVALID(m_axi_DDS_OUTPUT1_AWVALID),
    .AWREADY(m_axi_DDS_OUTPUT1_AWREADY),
    .AWADDR(m_axi_DDS_OUTPUT1_AWADDR),
    .AWID(m_axi_DDS_OUTPUT1_AWID),
    .AWLEN(m_axi_DDS_OUTPUT1_AWLEN),
    .AWSIZE(m_axi_DDS_OUTPUT1_AWSIZE),
    .AWBURST(m_axi_DDS_OUTPUT1_AWBURST),
    .AWLOCK(m_axi_DDS_OUTPUT1_AWLOCK),
    .AWCACHE(m_axi_DDS_OUTPUT1_AWCACHE),
    .AWPROT(m_axi_DDS_OUTPUT1_AWPROT),
    .AWQOS(m_axi_DDS_OUTPUT1_AWQOS),
    .AWREGION(m_axi_DDS_OUTPUT1_AWREGION),
    .AWUSER(m_axi_DDS_OUTPUT1_AWUSER),
    .WVALID(m_axi_DDS_OUTPUT1_WVALID),
    .WREADY(m_axi_DDS_OUTPUT1_WREADY),
    .WDATA(m_axi_DDS_OUTPUT1_WDATA),
    .WSTRB(m_axi_DDS_OUTPUT1_WSTRB),
    .WLAST(m_axi_DDS_OUTPUT1_WLAST),
    .WID(m_axi_DDS_OUTPUT1_WID),
    .WUSER(m_axi_DDS_OUTPUT1_WUSER),
    .ARVALID(m_axi_DDS_OUTPUT1_ARVALID),
    .ARREADY(m_axi_DDS_OUTPUT1_ARREADY),
    .ARADDR(m_axi_DDS_OUTPUT1_ARADDR),
    .ARID(m_axi_DDS_OUTPUT1_ARID),
    .ARLEN(m_axi_DDS_OUTPUT1_ARLEN),
    .ARSIZE(m_axi_DDS_OUTPUT1_ARSIZE),
    .ARBURST(m_axi_DDS_OUTPUT1_ARBURST),
    .ARLOCK(m_axi_DDS_OUTPUT1_ARLOCK),
    .ARCACHE(m_axi_DDS_OUTPUT1_ARCACHE),
    .ARPROT(m_axi_DDS_OUTPUT1_ARPROT),
    .ARQOS(m_axi_DDS_OUTPUT1_ARQOS),
    .ARREGION(m_axi_DDS_OUTPUT1_ARREGION),
    .ARUSER(m_axi_DDS_OUTPUT1_ARUSER),
    .RVALID(m_axi_DDS_OUTPUT1_RVALID),
    .RREADY(m_axi_DDS_OUTPUT1_RREADY),
    .RDATA(m_axi_DDS_OUTPUT1_RDATA),
    .RLAST(m_axi_DDS_OUTPUT1_RLAST),
    .RID(m_axi_DDS_OUTPUT1_RID),
    .RUSER(m_axi_DDS_OUTPUT1_RUSER),
    .RRESP(m_axi_DDS_OUTPUT1_RRESP),
    .BVALID(m_axi_DDS_OUTPUT1_BVALID),
    .BREADY(m_axi_DDS_OUTPUT1_BREADY),
    .BRESP(m_axi_DDS_OUTPUT1_BRESP),
    .BID(m_axi_DDS_OUTPUT1_BID),
    .BUSER(m_axi_DDS_OUTPUT1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(DDS_OUTPUT1_ARREADY),
    .I_ARADDR(ap_const_lv32_0),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_0),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(DDS_OUTPUT1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(DDS_OUTPUT1_RDATA),
    .I_RID(DDS_OUTPUT1_RID),
    .I_RUSER(DDS_OUTPUT1_RUSER),
    .I_RRESP(DDS_OUTPUT1_RRESP),
    .I_RLAST(DDS_OUTPUT1_RLAST),
    .I_AWVALID(DDS_OUTPUT1_AWVALID),
    .I_AWREADY(DDS_OUTPUT1_AWREADY),
    .I_AWADDR(grp_process_frame_fu_52_m_axi_sin_out_V_AWADDR),
    .I_AWID(grp_process_frame_fu_52_m_axi_sin_out_V_AWID),
    .I_AWLEN(grp_process_frame_fu_52_m_axi_sin_out_V_AWLEN),
    .I_AWSIZE(grp_process_frame_fu_52_m_axi_sin_out_V_AWSIZE),
    .I_AWLOCK(grp_process_frame_fu_52_m_axi_sin_out_V_AWLOCK),
    .I_AWCACHE(grp_process_frame_fu_52_m_axi_sin_out_V_AWCACHE),
    .I_AWQOS(grp_process_frame_fu_52_m_axi_sin_out_V_AWQOS),
    .I_AWPROT(grp_process_frame_fu_52_m_axi_sin_out_V_AWPROT),
    .I_AWUSER(grp_process_frame_fu_52_m_axi_sin_out_V_AWUSER),
    .I_AWBURST(grp_process_frame_fu_52_m_axi_sin_out_V_AWBURST),
    .I_AWREGION(grp_process_frame_fu_52_m_axi_sin_out_V_AWREGION),
    .I_WVALID(DDS_OUTPUT1_WVALID),
    .I_WREADY(DDS_OUTPUT1_WREADY),
    .I_WDATA(grp_process_frame_fu_52_m_axi_sin_out_V_WDATA),
    .I_WID(grp_process_frame_fu_52_m_axi_sin_out_V_WID),
    .I_WUSER(grp_process_frame_fu_52_m_axi_sin_out_V_WUSER),
    .I_WLAST(grp_process_frame_fu_52_m_axi_sin_out_V_WLAST),
    .I_WSTRB(grp_process_frame_fu_52_m_axi_sin_out_V_WSTRB),
    .I_BVALID(DDS_OUTPUT1_BVALID),
    .I_BREADY(DDS_OUTPUT1_BREADY),
    .I_BRESP(DDS_OUTPUT1_BRESP),
    .I_BID(DDS_OUTPUT1_BID),
    .I_BUSER(DDS_OUTPUT1_BUSER)
);

process_frame grp_process_frame_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_process_frame_fu_52_ap_start),
    .ap_done(grp_process_frame_fu_52_ap_done),
    .ap_idle(grp_process_frame_fu_52_ap_idle),
    .ap_ready(grp_process_frame_fu_52_ap_ready),
    .nofSample(nofSample_read_reg_73),
    .incr_V(incr_V_read_reg_68),
    .m_axi_cos_out_V_AWVALID(grp_process_frame_fu_52_m_axi_cos_out_V_AWVALID),
    .m_axi_cos_out_V_AWREADY(DDS_OUTPUT_AWREADY),
    .m_axi_cos_out_V_AWADDR(grp_process_frame_fu_52_m_axi_cos_out_V_AWADDR),
    .m_axi_cos_out_V_AWID(grp_process_frame_fu_52_m_axi_cos_out_V_AWID),
    .m_axi_cos_out_V_AWLEN(grp_process_frame_fu_52_m_axi_cos_out_V_AWLEN),
    .m_axi_cos_out_V_AWSIZE(grp_process_frame_fu_52_m_axi_cos_out_V_AWSIZE),
    .m_axi_cos_out_V_AWBURST(grp_process_frame_fu_52_m_axi_cos_out_V_AWBURST),
    .m_axi_cos_out_V_AWLOCK(grp_process_frame_fu_52_m_axi_cos_out_V_AWLOCK),
    .m_axi_cos_out_V_AWCACHE(grp_process_frame_fu_52_m_axi_cos_out_V_AWCACHE),
    .m_axi_cos_out_V_AWPROT(grp_process_frame_fu_52_m_axi_cos_out_V_AWPROT),
    .m_axi_cos_out_V_AWQOS(grp_process_frame_fu_52_m_axi_cos_out_V_AWQOS),
    .m_axi_cos_out_V_AWREGION(grp_process_frame_fu_52_m_axi_cos_out_V_AWREGION),
    .m_axi_cos_out_V_AWUSER(grp_process_frame_fu_52_m_axi_cos_out_V_AWUSER),
    .m_axi_cos_out_V_WVALID(grp_process_frame_fu_52_m_axi_cos_out_V_WVALID),
    .m_axi_cos_out_V_WREADY(DDS_OUTPUT_WREADY),
    .m_axi_cos_out_V_WDATA(grp_process_frame_fu_52_m_axi_cos_out_V_WDATA),
    .m_axi_cos_out_V_WSTRB(grp_process_frame_fu_52_m_axi_cos_out_V_WSTRB),
    .m_axi_cos_out_V_WLAST(grp_process_frame_fu_52_m_axi_cos_out_V_WLAST),
    .m_axi_cos_out_V_WID(grp_process_frame_fu_52_m_axi_cos_out_V_WID),
    .m_axi_cos_out_V_WUSER(grp_process_frame_fu_52_m_axi_cos_out_V_WUSER),
    .m_axi_cos_out_V_ARVALID(grp_process_frame_fu_52_m_axi_cos_out_V_ARVALID),
    .m_axi_cos_out_V_ARREADY(1'b0),
    .m_axi_cos_out_V_ARADDR(grp_process_frame_fu_52_m_axi_cos_out_V_ARADDR),
    .m_axi_cos_out_V_ARID(grp_process_frame_fu_52_m_axi_cos_out_V_ARID),
    .m_axi_cos_out_V_ARLEN(grp_process_frame_fu_52_m_axi_cos_out_V_ARLEN),
    .m_axi_cos_out_V_ARSIZE(grp_process_frame_fu_52_m_axi_cos_out_V_ARSIZE),
    .m_axi_cos_out_V_ARBURST(grp_process_frame_fu_52_m_axi_cos_out_V_ARBURST),
    .m_axi_cos_out_V_ARLOCK(grp_process_frame_fu_52_m_axi_cos_out_V_ARLOCK),
    .m_axi_cos_out_V_ARCACHE(grp_process_frame_fu_52_m_axi_cos_out_V_ARCACHE),
    .m_axi_cos_out_V_ARPROT(grp_process_frame_fu_52_m_axi_cos_out_V_ARPROT),
    .m_axi_cos_out_V_ARQOS(grp_process_frame_fu_52_m_axi_cos_out_V_ARQOS),
    .m_axi_cos_out_V_ARREGION(grp_process_frame_fu_52_m_axi_cos_out_V_ARREGION),
    .m_axi_cos_out_V_ARUSER(grp_process_frame_fu_52_m_axi_cos_out_V_ARUSER),
    .m_axi_cos_out_V_RVALID(1'b0),
    .m_axi_cos_out_V_RREADY(grp_process_frame_fu_52_m_axi_cos_out_V_RREADY),
    .m_axi_cos_out_V_RDATA(ap_const_lv16_0),
    .m_axi_cos_out_V_RLAST(1'b0),
    .m_axi_cos_out_V_RID(1'b0),
    .m_axi_cos_out_V_RUSER(1'b0),
    .m_axi_cos_out_V_RRESP(ap_const_lv2_0),
    .m_axi_cos_out_V_BVALID(DDS_OUTPUT_BVALID),
    .m_axi_cos_out_V_BREADY(grp_process_frame_fu_52_m_axi_cos_out_V_BREADY),
    .m_axi_cos_out_V_BRESP(DDS_OUTPUT_BRESP),
    .m_axi_cos_out_V_BID(DDS_OUTPUT_BID),
    .m_axi_cos_out_V_BUSER(DDS_OUTPUT_BUSER),
    .m_axi_sin_out_V_AWVALID(grp_process_frame_fu_52_m_axi_sin_out_V_AWVALID),
    .m_axi_sin_out_V_AWREADY(DDS_OUTPUT1_AWREADY),
    .m_axi_sin_out_V_AWADDR(grp_process_frame_fu_52_m_axi_sin_out_V_AWADDR),
    .m_axi_sin_out_V_AWID(grp_process_frame_fu_52_m_axi_sin_out_V_AWID),
    .m_axi_sin_out_V_AWLEN(grp_process_frame_fu_52_m_axi_sin_out_V_AWLEN),
    .m_axi_sin_out_V_AWSIZE(grp_process_frame_fu_52_m_axi_sin_out_V_AWSIZE),
    .m_axi_sin_out_V_AWBURST(grp_process_frame_fu_52_m_axi_sin_out_V_AWBURST),
    .m_axi_sin_out_V_AWLOCK(grp_process_frame_fu_52_m_axi_sin_out_V_AWLOCK),
    .m_axi_sin_out_V_AWCACHE(grp_process_frame_fu_52_m_axi_sin_out_V_AWCACHE),
    .m_axi_sin_out_V_AWPROT(grp_process_frame_fu_52_m_axi_sin_out_V_AWPROT),
    .m_axi_sin_out_V_AWQOS(grp_process_frame_fu_52_m_axi_sin_out_V_AWQOS),
    .m_axi_sin_out_V_AWREGION(grp_process_frame_fu_52_m_axi_sin_out_V_AWREGION),
    .m_axi_sin_out_V_AWUSER(grp_process_frame_fu_52_m_axi_sin_out_V_AWUSER),
    .m_axi_sin_out_V_WVALID(grp_process_frame_fu_52_m_axi_sin_out_V_WVALID),
    .m_axi_sin_out_V_WREADY(DDS_OUTPUT1_WREADY),
    .m_axi_sin_out_V_WDATA(grp_process_frame_fu_52_m_axi_sin_out_V_WDATA),
    .m_axi_sin_out_V_WSTRB(grp_process_frame_fu_52_m_axi_sin_out_V_WSTRB),
    .m_axi_sin_out_V_WLAST(grp_process_frame_fu_52_m_axi_sin_out_V_WLAST),
    .m_axi_sin_out_V_WID(grp_process_frame_fu_52_m_axi_sin_out_V_WID),
    .m_axi_sin_out_V_WUSER(grp_process_frame_fu_52_m_axi_sin_out_V_WUSER),
    .m_axi_sin_out_V_ARVALID(grp_process_frame_fu_52_m_axi_sin_out_V_ARVALID),
    .m_axi_sin_out_V_ARREADY(1'b0),
    .m_axi_sin_out_V_ARADDR(grp_process_frame_fu_52_m_axi_sin_out_V_ARADDR),
    .m_axi_sin_out_V_ARID(grp_process_frame_fu_52_m_axi_sin_out_V_ARID),
    .m_axi_sin_out_V_ARLEN(grp_process_frame_fu_52_m_axi_sin_out_V_ARLEN),
    .m_axi_sin_out_V_ARSIZE(grp_process_frame_fu_52_m_axi_sin_out_V_ARSIZE),
    .m_axi_sin_out_V_ARBURST(grp_process_frame_fu_52_m_axi_sin_out_V_ARBURST),
    .m_axi_sin_out_V_ARLOCK(grp_process_frame_fu_52_m_axi_sin_out_V_ARLOCK),
    .m_axi_sin_out_V_ARCACHE(grp_process_frame_fu_52_m_axi_sin_out_V_ARCACHE),
    .m_axi_sin_out_V_ARPROT(grp_process_frame_fu_52_m_axi_sin_out_V_ARPROT),
    .m_axi_sin_out_V_ARQOS(grp_process_frame_fu_52_m_axi_sin_out_V_ARQOS),
    .m_axi_sin_out_V_ARREGION(grp_process_frame_fu_52_m_axi_sin_out_V_ARREGION),
    .m_axi_sin_out_V_ARUSER(grp_process_frame_fu_52_m_axi_sin_out_V_ARUSER),
    .m_axi_sin_out_V_RVALID(1'b0),
    .m_axi_sin_out_V_RREADY(grp_process_frame_fu_52_m_axi_sin_out_V_RREADY),
    .m_axi_sin_out_V_RDATA(ap_const_lv16_0),
    .m_axi_sin_out_V_RLAST(1'b0),
    .m_axi_sin_out_V_RID(1'b0),
    .m_axi_sin_out_V_RUSER(1'b0),
    .m_axi_sin_out_V_RRESP(ap_const_lv2_0),
    .m_axi_sin_out_V_BVALID(DDS_OUTPUT1_BVALID),
    .m_axi_sin_out_V_BREADY(grp_process_frame_fu_52_m_axi_sin_out_V_BREADY),
    .m_axi_sin_out_V_BRESP(DDS_OUTPUT1_BRESP),
    .m_axi_sin_out_V_BID(DDS_OUTPUT1_BID),
    .m_axi_sin_out_V_BUSER(DDS_OUTPUT1_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_process_frame_fu_52_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_reg_grp_process_frame_fu_52_ap_start <= 1'b1;
        end else if ((1'b1 == grp_process_frame_fu_52_ap_ready)) begin
            ap_reg_grp_process_frame_fu_52_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        incr_V_read_reg_68 <= incr_V;
        nofSample_read_reg_73 <= nofSample;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT1_AWVALID = grp_process_frame_fu_52_m_axi_sin_out_V_AWVALID;
    end else begin
        DDS_OUTPUT1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT1_BREADY = grp_process_frame_fu_52_m_axi_sin_out_V_BREADY;
    end else begin
        DDS_OUTPUT1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT1_WVALID = grp_process_frame_fu_52_m_axi_sin_out_V_WVALID;
    end else begin
        DDS_OUTPUT1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT_AWVALID = grp_process_frame_fu_52_m_axi_cos_out_V_AWVALID;
    end else begin
        DDS_OUTPUT_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT_BREADY = grp_process_frame_fu_52_m_axi_cos_out_V_BREADY;
    end else begin
        DDS_OUTPUT_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        DDS_OUTPUT_WVALID = grp_process_frame_fu_52_m_axi_cos_out_V_WVALID;
    end else begin
        DDS_OUTPUT_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == grp_process_frame_fu_52_ap_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == grp_process_frame_fu_52_ap_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == grp_process_frame_fu_52_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_process_frame_fu_52_ap_start = ap_reg_grp_process_frame_fu_52_ap_start;

endmodule //dds
