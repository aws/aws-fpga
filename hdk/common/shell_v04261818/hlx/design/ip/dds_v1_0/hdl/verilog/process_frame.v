// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_frame (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        nofSample,
        incr_V,
        m_axi_cos_out_V_AWVALID,
        m_axi_cos_out_V_AWREADY,
        m_axi_cos_out_V_AWADDR,
        m_axi_cos_out_V_AWID,
        m_axi_cos_out_V_AWLEN,
        m_axi_cos_out_V_AWSIZE,
        m_axi_cos_out_V_AWBURST,
        m_axi_cos_out_V_AWLOCK,
        m_axi_cos_out_V_AWCACHE,
        m_axi_cos_out_V_AWPROT,
        m_axi_cos_out_V_AWQOS,
        m_axi_cos_out_V_AWREGION,
        m_axi_cos_out_V_AWUSER,
        m_axi_cos_out_V_WVALID,
        m_axi_cos_out_V_WREADY,
        m_axi_cos_out_V_WDATA,
        m_axi_cos_out_V_WSTRB,
        m_axi_cos_out_V_WLAST,
        m_axi_cos_out_V_WID,
        m_axi_cos_out_V_WUSER,
        m_axi_cos_out_V_ARVALID,
        m_axi_cos_out_V_ARREADY,
        m_axi_cos_out_V_ARADDR,
        m_axi_cos_out_V_ARID,
        m_axi_cos_out_V_ARLEN,
        m_axi_cos_out_V_ARSIZE,
        m_axi_cos_out_V_ARBURST,
        m_axi_cos_out_V_ARLOCK,
        m_axi_cos_out_V_ARCACHE,
        m_axi_cos_out_V_ARPROT,
        m_axi_cos_out_V_ARQOS,
        m_axi_cos_out_V_ARREGION,
        m_axi_cos_out_V_ARUSER,
        m_axi_cos_out_V_RVALID,
        m_axi_cos_out_V_RREADY,
        m_axi_cos_out_V_RDATA,
        m_axi_cos_out_V_RLAST,
        m_axi_cos_out_V_RID,
        m_axi_cos_out_V_RUSER,
        m_axi_cos_out_V_RRESP,
        m_axi_cos_out_V_BVALID,
        m_axi_cos_out_V_BREADY,
        m_axi_cos_out_V_BRESP,
        m_axi_cos_out_V_BID,
        m_axi_cos_out_V_BUSER,
        m_axi_sin_out_V_AWVALID,
        m_axi_sin_out_V_AWREADY,
        m_axi_sin_out_V_AWADDR,
        m_axi_sin_out_V_AWID,
        m_axi_sin_out_V_AWLEN,
        m_axi_sin_out_V_AWSIZE,
        m_axi_sin_out_V_AWBURST,
        m_axi_sin_out_V_AWLOCK,
        m_axi_sin_out_V_AWCACHE,
        m_axi_sin_out_V_AWPROT,
        m_axi_sin_out_V_AWQOS,
        m_axi_sin_out_V_AWREGION,
        m_axi_sin_out_V_AWUSER,
        m_axi_sin_out_V_WVALID,
        m_axi_sin_out_V_WREADY,
        m_axi_sin_out_V_WDATA,
        m_axi_sin_out_V_WSTRB,
        m_axi_sin_out_V_WLAST,
        m_axi_sin_out_V_WID,
        m_axi_sin_out_V_WUSER,
        m_axi_sin_out_V_ARVALID,
        m_axi_sin_out_V_ARREADY,
        m_axi_sin_out_V_ARADDR,
        m_axi_sin_out_V_ARID,
        m_axi_sin_out_V_ARLEN,
        m_axi_sin_out_V_ARSIZE,
        m_axi_sin_out_V_ARBURST,
        m_axi_sin_out_V_ARLOCK,
        m_axi_sin_out_V_ARCACHE,
        m_axi_sin_out_V_ARPROT,
        m_axi_sin_out_V_ARQOS,
        m_axi_sin_out_V_ARREGION,
        m_axi_sin_out_V_ARUSER,
        m_axi_sin_out_V_RVALID,
        m_axi_sin_out_V_RREADY,
        m_axi_sin_out_V_RDATA,
        m_axi_sin_out_V_RLAST,
        m_axi_sin_out_V_RID,
        m_axi_sin_out_V_RUSER,
        m_axi_sin_out_V_RRESP,
        m_axi_sin_out_V_BVALID,
        m_axi_sin_out_V_BREADY,
        m_axi_sin_out_V_BRESP,
        m_axi_sin_out_V_BID,
        m_axi_sin_out_V_BUSER
);

parameter    ap_ST_fsm_state1 = 3'b1;
parameter    ap_ST_fsm_pp0_stage0 = 3'b10;
parameter    ap_ST_fsm_state27 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] nofSample;
input  [31:0] incr_V;
output   m_axi_cos_out_V_AWVALID;
input   m_axi_cos_out_V_AWREADY;
output  [31:0] m_axi_cos_out_V_AWADDR;
output  [0:0] m_axi_cos_out_V_AWID;
output  [31:0] m_axi_cos_out_V_AWLEN;
output  [2:0] m_axi_cos_out_V_AWSIZE;
output  [1:0] m_axi_cos_out_V_AWBURST;
output  [1:0] m_axi_cos_out_V_AWLOCK;
output  [3:0] m_axi_cos_out_V_AWCACHE;
output  [2:0] m_axi_cos_out_V_AWPROT;
output  [3:0] m_axi_cos_out_V_AWQOS;
output  [3:0] m_axi_cos_out_V_AWREGION;
output  [0:0] m_axi_cos_out_V_AWUSER;
output   m_axi_cos_out_V_WVALID;
input   m_axi_cos_out_V_WREADY;
output  [15:0] m_axi_cos_out_V_WDATA;
output  [1:0] m_axi_cos_out_V_WSTRB;
output   m_axi_cos_out_V_WLAST;
output  [0:0] m_axi_cos_out_V_WID;
output  [0:0] m_axi_cos_out_V_WUSER;
output   m_axi_cos_out_V_ARVALID;
input   m_axi_cos_out_V_ARREADY;
output  [31:0] m_axi_cos_out_V_ARADDR;
output  [0:0] m_axi_cos_out_V_ARID;
output  [31:0] m_axi_cos_out_V_ARLEN;
output  [2:0] m_axi_cos_out_V_ARSIZE;
output  [1:0] m_axi_cos_out_V_ARBURST;
output  [1:0] m_axi_cos_out_V_ARLOCK;
output  [3:0] m_axi_cos_out_V_ARCACHE;
output  [2:0] m_axi_cos_out_V_ARPROT;
output  [3:0] m_axi_cos_out_V_ARQOS;
output  [3:0] m_axi_cos_out_V_ARREGION;
output  [0:0] m_axi_cos_out_V_ARUSER;
input   m_axi_cos_out_V_RVALID;
output   m_axi_cos_out_V_RREADY;
input  [15:0] m_axi_cos_out_V_RDATA;
input   m_axi_cos_out_V_RLAST;
input  [0:0] m_axi_cos_out_V_RID;
input  [0:0] m_axi_cos_out_V_RUSER;
input  [1:0] m_axi_cos_out_V_RRESP;
input   m_axi_cos_out_V_BVALID;
output   m_axi_cos_out_V_BREADY;
input  [1:0] m_axi_cos_out_V_BRESP;
input  [0:0] m_axi_cos_out_V_BID;
input  [0:0] m_axi_cos_out_V_BUSER;
output   m_axi_sin_out_V_AWVALID;
input   m_axi_sin_out_V_AWREADY;
output  [31:0] m_axi_sin_out_V_AWADDR;
output  [0:0] m_axi_sin_out_V_AWID;
output  [31:0] m_axi_sin_out_V_AWLEN;
output  [2:0] m_axi_sin_out_V_AWSIZE;
output  [1:0] m_axi_sin_out_V_AWBURST;
output  [1:0] m_axi_sin_out_V_AWLOCK;
output  [3:0] m_axi_sin_out_V_AWCACHE;
output  [2:0] m_axi_sin_out_V_AWPROT;
output  [3:0] m_axi_sin_out_V_AWQOS;
output  [3:0] m_axi_sin_out_V_AWREGION;
output  [0:0] m_axi_sin_out_V_AWUSER;
output   m_axi_sin_out_V_WVALID;
input   m_axi_sin_out_V_WREADY;
output  [15:0] m_axi_sin_out_V_WDATA;
output  [1:0] m_axi_sin_out_V_WSTRB;
output   m_axi_sin_out_V_WLAST;
output  [0:0] m_axi_sin_out_V_WID;
output  [0:0] m_axi_sin_out_V_WUSER;
output   m_axi_sin_out_V_ARVALID;
input   m_axi_sin_out_V_ARREADY;
output  [31:0] m_axi_sin_out_V_ARADDR;
output  [0:0] m_axi_sin_out_V_ARID;
output  [31:0] m_axi_sin_out_V_ARLEN;
output  [2:0] m_axi_sin_out_V_ARSIZE;
output  [1:0] m_axi_sin_out_V_ARBURST;
output  [1:0] m_axi_sin_out_V_ARLOCK;
output  [3:0] m_axi_sin_out_V_ARCACHE;
output  [2:0] m_axi_sin_out_V_ARPROT;
output  [3:0] m_axi_sin_out_V_ARQOS;
output  [3:0] m_axi_sin_out_V_ARREGION;
output  [0:0] m_axi_sin_out_V_ARUSER;
input   m_axi_sin_out_V_RVALID;
output   m_axi_sin_out_V_RREADY;
input  [15:0] m_axi_sin_out_V_RDATA;
input   m_axi_sin_out_V_RLAST;
input  [0:0] m_axi_sin_out_V_RID;
input  [0:0] m_axi_sin_out_V_RUSER;
input  [1:0] m_axi_sin_out_V_RRESP;
input   m_axi_sin_out_V_BVALID;
output   m_axi_sin_out_V_BREADY;
input  [1:0] m_axi_sin_out_V_BRESP;
input  [0:0] m_axi_sin_out_V_BID;
input  [0:0] m_axi_sin_out_V_BUSER;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_cos_out_V_AWVALID;
reg m_axi_cos_out_V_WVALID;
reg m_axi_cos_out_V_BREADY;
reg m_axi_sin_out_V_AWVALID;
reg m_axi_sin_out_V_WVALID;
reg m_axi_sin_out_V_BREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    cos_out_V_blk_n_AW;
reg    ap_enable_reg_pp0_iter18;
reg    cos_out_V_blk_n_W;
reg    ap_enable_reg_pp0_iter19;
reg    cos_out_V_blk_n_B;
reg    ap_enable_reg_pp0_iter24;
reg    sin_out_V_blk_n_AW;
reg    sin_out_V_blk_n_W;
reg    sin_out_V_blk_n_B;
reg   [30:0] i_cast6_reg_98;
wire   [0:0] tmp4_fu_120_p2;
wire   [31:0] i_cast6_cast_fu_126_p1;
reg   [31:0] i_cast6_cast_reg_179;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_sig_ioackin_m_axi_cos_out_V_AWREADY;
reg    ap_sig_ioackin_m_axi_sin_out_V_AWREADY;
reg    ap_sig_ioackin_m_axi_cos_out_V_WREADY;
reg    ap_sig_ioackin_m_axi_sin_out_V_WREADY;
reg   [31:0] ap_pipeline_reg_pp0_iter1_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter2_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter3_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter4_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter5_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter6_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter7_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter8_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter9_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter10_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter11_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter12_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter13_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter14_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter15_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter16_i_cast6_cast_reg_179;
reg   [31:0] ap_pipeline_reg_pp0_iter17_i_cast6_cast_reg_179;
wire   [30:0] i_fu_130_p2;
reg   [30:0] i_reg_185;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_fu_140_p2;
reg   [0:0] tmp_reg_190;
reg   [15:0] dds_cos_V_reg_194;
reg   [15:0] dds_sin_V_reg_199;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
wire    grp_process_r_fu_109_ap_start;
wire    grp_process_r_fu_109_ap_done;
wire    grp_process_r_fu_109_ap_idle;
wire    grp_process_r_fu_109_ap_ready;
reg    grp_process_r_fu_109_ap_ce;
wire   [15:0] grp_process_r_fu_109_ap_return_0;
wire   [15:0] grp_process_r_fu_109_ap_return_1;
reg   [30:0] i_cast6_phi_fu_102_p4;
reg    ap_reg_grp_process_r_fu_109_ap_start;
reg    ap_reg_ioackin_m_axi_cos_out_V_AWREADY;
reg    ap_reg_ioackin_m_axi_cos_out_V_WREADY;
reg    ap_reg_ioackin_m_axi_sin_out_V_AWREADY;
reg    ap_reg_ioackin_m_axi_sin_out_V_WREADY;
wire   [31:0] i_cast_fu_136_p1;
wire   [0:0] ap_CS_fsm_state27;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_425;
reg    ap_condition_182;
reg    ap_condition_431;
reg    ap_condition_434;
reg    ap_condition_437;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_reg_grp_process_r_fu_109_ap_start = 1'b0;
#0 ap_reg_ioackin_m_axi_cos_out_V_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_cos_out_V_WREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_sin_out_V_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_sin_out_V_WREADY = 1'b0;
end

process_r grp_process_r_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_process_r_fu_109_ap_start),
    .ap_done(grp_process_r_fu_109_ap_done),
    .ap_idle(grp_process_r_fu_109_ap_idle),
    .ap_ready(grp_process_r_fu_109_ap_ready),
    .ap_ce(grp_process_r_fu_109_ap_ce),
    .incr_V(incr_V),
    .ap_return_0(grp_process_r_fu_109_ap_return_0),
    .ap_return_1(grp_process_r_fu_109_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & (1'b0 == tmp_fu_140_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(1'b0 == tmp4_fu_120_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(1'b0 == tmp4_fu_120_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(1'b0 == tmp4_fu_120_p2))) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_process_r_fu_109_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_process_r_fu_109_ap_start <= 1'b1;
        end else if ((1'b1 == grp_process_r_fu_109_ap_ready)) begin
            ap_reg_grp_process_r_fu_109_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_cos_out_V_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_enable_reg_pp0_iter18)) begin
            if ((ap_condition_182 == 1'b1)) begin
                ap_reg_ioackin_m_axi_cos_out_V_AWREADY <= 1'b0;
            end else if ((ap_condition_425 == 1'b1)) begin
                ap_reg_ioackin_m_axi_cos_out_V_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_cos_out_V_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_enable_reg_pp0_iter19)) begin
            if ((ap_condition_182 == 1'b1)) begin
                ap_reg_ioackin_m_axi_cos_out_V_WREADY <= 1'b0;
            end else if ((ap_condition_431 == 1'b1)) begin
                ap_reg_ioackin_m_axi_cos_out_V_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_sin_out_V_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_enable_reg_pp0_iter18)) begin
            if ((ap_condition_182 == 1'b1)) begin
                ap_reg_ioackin_m_axi_sin_out_V_AWREADY <= 1'b0;
            end else if ((ap_condition_434 == 1'b1)) begin
                ap_reg_ioackin_m_axi_sin_out_V_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_sin_out_V_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_enable_reg_pp0_iter19)) begin
            if ((ap_condition_182 == 1'b1)) begin
                ap_reg_ioackin_m_axi_sin_out_V_WREADY <= 1'b0;
            end else if ((ap_condition_437 == 1'b1)) begin
                ap_reg_ioackin_m_axi_sin_out_V_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(1'b0 == tmp4_fu_120_p2))) begin
        i_cast6_reg_98 <= ap_const_lv31_0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b0 == tmp_reg_190))) begin
        i_cast6_reg_98 <= i_reg_185;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))))) begin
        ap_pipeline_reg_pp0_iter10_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter9_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter11_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter10_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter12_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter11_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter13_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter12_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter14_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter13_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter15_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter14_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter16_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter15_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter17_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter16_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter2_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter1_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter3_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter2_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter4_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter3_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter5_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter4_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter6_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter5_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter7_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter6_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter8_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter7_i_cast6_cast_reg_179[30 : 0];
        ap_pipeline_reg_pp0_iter9_i_cast6_cast_reg_179[30 : 0] <= ap_pipeline_reg_pp0_iter8_i_cast6_cast_reg_179[30 : 0];
        dds_cos_V_reg_194 <= grp_process_r_fu_109_ap_return_0;
        dds_sin_V_reg_199 <= grp_process_r_fu_109_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))))) begin
        ap_pipeline_reg_pp0_iter1_i_cast6_cast_reg_179[30 : 0] <= i_cast6_cast_reg_179[30 : 0];
        i_cast6_cast_reg_179[30 : 0] <= i_cast6_cast_fu_126_p1[30 : 0];
        tmp_reg_190 <= tmp_fu_140_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_reg_185 <= i_fu_130_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_cos_out_V_AWREADY)) begin
        ap_sig_ioackin_m_axi_cos_out_V_AWREADY = m_axi_cos_out_V_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_cos_out_V_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_cos_out_V_WREADY)) begin
        ap_sig_ioackin_m_axi_cos_out_V_WREADY = m_axi_cos_out_V_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_cos_out_V_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_sin_out_V_AWREADY)) begin
        ap_sig_ioackin_m_axi_sin_out_V_AWREADY = m_axi_sin_out_V_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_sin_out_V_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_sin_out_V_WREADY)) begin
        ap_sig_ioackin_m_axi_sin_out_V_WREADY = m_axi_sin_out_V_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_sin_out_V_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter18)) begin
        cos_out_V_blk_n_AW = m_axi_cos_out_V_AWREADY;
    end else begin
        cos_out_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter24)) begin
        cos_out_V_blk_n_B = m_axi_cos_out_V_BVALID;
    end else begin
        cos_out_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter19)) begin
        cos_out_V_blk_n_W = m_axi_cos_out_V_WREADY;
    end else begin
        cos_out_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))))) begin
        grp_process_r_fu_109_ap_ce = 1'b1;
    end else begin
        grp_process_r_fu_109_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b0 == tmp_reg_190))) begin
        i_cast6_phi_fu_102_p4 = i_reg_185;
    end else begin
        i_cast6_phi_fu_102_p4 = i_cast6_reg_98;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter18) & ~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b0 == ap_reg_ioackin_m_axi_cos_out_V_AWREADY))) begin
        m_axi_cos_out_V_AWVALID = 1'b1;
    end else begin
        m_axi_cos_out_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter24) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))))) begin
        m_axi_cos_out_V_BREADY = 1'b1;
    end else begin
        m_axi_cos_out_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter19) & ~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b0 == ap_reg_ioackin_m_axi_cos_out_V_WREADY))) begin
        m_axi_cos_out_V_WVALID = 1'b1;
    end else begin
        m_axi_cos_out_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter18) & ~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b0 == ap_reg_ioackin_m_axi_sin_out_V_AWREADY))) begin
        m_axi_sin_out_V_AWVALID = 1'b1;
    end else begin
        m_axi_sin_out_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter24) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))))) begin
        m_axi_sin_out_V_BREADY = 1'b1;
    end else begin
        m_axi_sin_out_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter19) & ~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b0 == ap_reg_ioackin_m_axi_sin_out_V_WREADY))) begin
        m_axi_sin_out_V_WVALID = 1'b1;
    end else begin
        m_axi_sin_out_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter18)) begin
        sin_out_V_blk_n_AW = m_axi_sin_out_V_AWREADY;
    end else begin
        sin_out_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter24)) begin
        sin_out_V_blk_n_B = m_axi_sin_out_V_BVALID;
    end else begin
        sin_out_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter19)) begin
        sin_out_V_blk_n_W = m_axi_sin_out_V_WREADY;
    end else begin
        sin_out_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & ~(1'b0 == tmp4_fu_120_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~(ap_start == 1'b0) & (1'b0 == tmp4_fu_120_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter24) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & ~(1'b1 == ap_enable_reg_pp0_iter23))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter24) & ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0)))) & ~(1'b1 == ap_enable_reg_pp0_iter23))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_2];

always @ (*) begin
    ap_condition_182 = ~(((1'b1 == ap_enable_reg_pp0_iter18) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_AWREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_AWREADY))) | ((1'b1 == ap_enable_reg_pp0_iter19) & ((1'b0 == ap_sig_ioackin_m_axi_cos_out_V_WREADY) | (1'b0 == ap_sig_ioackin_m_axi_sin_out_V_WREADY))) | ((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))));
end

always @ (*) begin
    ap_condition_425 = ((1'b1 == m_axi_cos_out_V_AWREADY) & ~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))));
end

always @ (*) begin
    ap_condition_431 = (~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b1 == m_axi_cos_out_V_WREADY));
end

always @ (*) begin
    ap_condition_434 = (~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b1 == m_axi_sin_out_V_AWREADY));
end

always @ (*) begin
    ap_condition_437 = (~((1'b1 == ap_enable_reg_pp0_iter24) & ((m_axi_cos_out_V_BVALID == 1'b0) | (m_axi_sin_out_V_BVALID == 1'b0))) & (1'b1 == m_axi_sin_out_V_WREADY));
end

assign grp_process_r_fu_109_ap_start = ap_reg_grp_process_r_fu_109_ap_start;

assign i_cast6_cast_fu_126_p1 = i_cast6_phi_fu_102_p4;

assign i_cast_fu_136_p1 = i_fu_130_p2;

assign i_fu_130_p2 = (i_cast6_phi_fu_102_p4 + ap_const_lv31_1);

assign m_axi_cos_out_V_ARADDR = ap_const_lv32_0;

assign m_axi_cos_out_V_ARBURST = ap_const_lv2_0;

assign m_axi_cos_out_V_ARCACHE = ap_const_lv4_0;

assign m_axi_cos_out_V_ARID = 1'b0;

assign m_axi_cos_out_V_ARLEN = ap_const_lv32_0;

assign m_axi_cos_out_V_ARLOCK = ap_const_lv2_0;

assign m_axi_cos_out_V_ARPROT = ap_const_lv3_0;

assign m_axi_cos_out_V_ARQOS = ap_const_lv4_0;

assign m_axi_cos_out_V_ARREGION = ap_const_lv4_0;

assign m_axi_cos_out_V_ARSIZE = ap_const_lv3_0;

assign m_axi_cos_out_V_ARUSER = 1'b0;

assign m_axi_cos_out_V_ARVALID = 1'b0;

assign m_axi_cos_out_V_AWADDR = ap_pipeline_reg_pp0_iter17_i_cast6_cast_reg_179;

assign m_axi_cos_out_V_AWBURST = ap_const_lv2_0;

assign m_axi_cos_out_V_AWCACHE = ap_const_lv4_0;

assign m_axi_cos_out_V_AWID = 1'b0;

assign m_axi_cos_out_V_AWLEN = ap_const_lv32_1;

assign m_axi_cos_out_V_AWLOCK = ap_const_lv2_0;

assign m_axi_cos_out_V_AWPROT = ap_const_lv3_0;

assign m_axi_cos_out_V_AWQOS = ap_const_lv4_0;

assign m_axi_cos_out_V_AWREGION = ap_const_lv4_0;

assign m_axi_cos_out_V_AWSIZE = ap_const_lv3_0;

assign m_axi_cos_out_V_AWUSER = 1'b0;

assign m_axi_cos_out_V_RREADY = 1'b0;

assign m_axi_cos_out_V_WDATA = dds_cos_V_reg_194;

assign m_axi_cos_out_V_WID = 1'b0;

assign m_axi_cos_out_V_WLAST = 1'b0;

assign m_axi_cos_out_V_WSTRB = ap_const_lv2_3;

assign m_axi_cos_out_V_WUSER = 1'b0;

assign m_axi_sin_out_V_ARADDR = ap_const_lv32_0;

assign m_axi_sin_out_V_ARBURST = ap_const_lv2_0;

assign m_axi_sin_out_V_ARCACHE = ap_const_lv4_0;

assign m_axi_sin_out_V_ARID = 1'b0;

assign m_axi_sin_out_V_ARLEN = ap_const_lv32_0;

assign m_axi_sin_out_V_ARLOCK = ap_const_lv2_0;

assign m_axi_sin_out_V_ARPROT = ap_const_lv3_0;

assign m_axi_sin_out_V_ARQOS = ap_const_lv4_0;

assign m_axi_sin_out_V_ARREGION = ap_const_lv4_0;

assign m_axi_sin_out_V_ARSIZE = ap_const_lv3_0;

assign m_axi_sin_out_V_ARUSER = 1'b0;

assign m_axi_sin_out_V_ARVALID = 1'b0;

assign m_axi_sin_out_V_AWADDR = ap_pipeline_reg_pp0_iter17_i_cast6_cast_reg_179;

assign m_axi_sin_out_V_AWBURST = ap_const_lv2_0;

assign m_axi_sin_out_V_AWCACHE = ap_const_lv4_0;

assign m_axi_sin_out_V_AWID = 1'b0;

assign m_axi_sin_out_V_AWLEN = ap_const_lv32_1;

assign m_axi_sin_out_V_AWLOCK = ap_const_lv2_0;

assign m_axi_sin_out_V_AWPROT = ap_const_lv3_0;

assign m_axi_sin_out_V_AWQOS = ap_const_lv4_0;

assign m_axi_sin_out_V_AWREGION = ap_const_lv4_0;

assign m_axi_sin_out_V_AWSIZE = ap_const_lv3_0;

assign m_axi_sin_out_V_AWUSER = 1'b0;

assign m_axi_sin_out_V_RREADY = 1'b0;

assign m_axi_sin_out_V_WDATA = dds_sin_V_reg_199;

assign m_axi_sin_out_V_WID = 1'b0;

assign m_axi_sin_out_V_WLAST = 1'b0;

assign m_axi_sin_out_V_WSTRB = ap_const_lv2_3;

assign m_axi_sin_out_V_WUSER = 1'b0;

assign tmp4_fu_120_p2 = (($signed(nofSample) > $signed(32'b00000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign tmp_fu_140_p2 = (($signed(i_cast_fu_136_p1) < $signed(nofSample)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter1_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter2_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter4_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter5_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter6_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter7_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter8_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter9_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter10_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter11_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter12_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter13_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter14_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter15_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter16_i_cast6_cast_reg_179[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter17_i_cast6_cast_reg_179[31] <= 1'b0;
end

endmodule //process_frame
