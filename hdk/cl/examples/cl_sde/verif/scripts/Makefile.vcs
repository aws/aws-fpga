# Amazon FPGA Hardware Development Kit
#
# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License"). You may not use
# this file except in compliance with the License. A copy of the License is
# located at
#
#    http://aws.amazon.com/asl/
#
# or in the "license" file accompanying this file. This file is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or
# implied. See the License for the specific language governing permissions and
# limitations under the License.


##################################################################
## Makefile For VCS compiles and simulations
## Step to run :
## 1. make create_libs VCS=1  -> To generate xilinx compile 
##    libraries. This is a one time step
## 2. make all VCS=1  -> Runs the test
##################################################################

LOG_EXISTS=$(shell [ -e $(SIM_DIR)/$(LOG_NAME) ] && echo 1 || echo 0 )
PASS_EXISTS=$(shell grep 'TEST PASSED' $(SIM_DIR)/$(LOG_NAME) | wc -l)

compile: $(COMPLIB_DIR)
	mkdir -p $(SIM_DIR)
	cd $(SIM_DIR) && ln -s -f $(VCS_COMPLIB_DIR)/synopsys_sim.setup
ifeq ($(MAKE_DEBUG), 1)
	cd $(SIM_DIR) && echo "vlogan -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog +systemverilogext+.sv +libext+.sv +libext+.v -full64 -lca -v2005 +v2k -l compile.vlogan.log -f $(SCRIPTS_DIR)/top.$(SIMULATOR).f +define+VCS $(DEFAULT_DEFINES) $(DEFINES) +lint=TFIPC-L" > compile.vlogan.log
	cd $(SIM_DIR) && echo "vcs tb $(TEST) $(C_TEST_NAME) -CFLAGS \"-I$(C_INC_DIR)\" -debug_all -M -I +lint=TFIPC-L -debug_pp glbl -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog -full64 +memcbk -licqueue -lca -v2005 -l compile.vcs.log" > compile.vcs.log
else
	cd $(SIM_DIR) && vlogan -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog +systemverilogext+.sv +libext+.sv +libext+.v -full64 -lca -v2005 +v2k -l compile.vlogan.log -f $(SCRIPTS_DIR)/top.$(SIMULATOR).f +define+VCS $(DEFAULT_DEFINES) $(DEFINES) +lint=TFIPC-L
	cd $(SIM_DIR) && vcs tb $(TEST) $(C_TEST_NAME) -CFLAGS "-I$(C_INC_DIR)" -debug_all -M -I +lint=TFIPC-L -debug_pp glbl -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog -full64 +memcbk -licqueue -lca -v2005 -l compile.vcs.log
endif

run:
ifeq ($(MAKE_DEBUG), 1)
	cd $(SIM_DIR) && echo "./simv -l $(LOG_NAME) $(PLUSARGS) $(REGRESS_PLUSARGS) +ntb_random_seed_automatic +vpdfile+$(TEST).vpd" > $(LOG_NAME)
else
	cd $(SIM_DIR) && ./simv -l $(LOG_NAME) $(PLUSARGS) $(REGRESS_PLUSARGS) +ntb_random_seed_automatic +vpdfile+$(TEST).vpd
endif

check:
ifeq ($(REGRESS), 1)
	@if [ $(LOG_EXISTS) -eq "1" ]; then \
	  if [ $(PASS_EXISTS) -eq "1" ]; then \
	    echo "$(LOG_NAME)  --  PASSED" >> $(RESULTS_FILE); \
	  else \
	    echo "$(LOG_NAME)  --  FAILED  -- Did not find 'TEST PASSED' message in log file" >> $(RESULTS_FILE); \
	  fi \
	else \
	  echo "$(LOG_NAME)  --  FAILED  -- Did not find $(LOG_NAME) file" >> $(RESULTS_FILE); \
	fi
endif

run_check: run check
        
$(COMPLIB_DIR):
	cd $(SIM_ROOT)/.. && echo "compile_simlib -language all -dir $(COMPLIB_DIR) -simulator $(SIMULATOR) -library all -family  all" > create_libs.tcl
	cd $(SIM_ROOT)/.. && vivado -mode batch -source create_libs.tcl
	cd $(SIM_ROOT)/.. && rm -rf create_libs.tcl

regress_clean:
ifeq ($(REGRESS), 1)
	@rm -rf $(SIM_ROOT)     
	@rm -rf $(RESULTS_FILE)
	@touch $(RESULTS_FILE)
endif

regress_sort:
	@sort -o $(RESULTS_FILE) $(RESULTS_FILE)

regress_post_clean:
	@rm -rf $(SIM_DIR)/*/AN.DB
	@rm -rf $(SIM_DIR)/*/csrc
	@rm -rf $(SIM_DIR)/*/simv
	@rm -rf $(SIM_DIR)/*/simv.daidir
	@rm -rf $(SIM_DIR)/*/synopsys_sim.setup
	@rm -rf $(SIM_DIR)/*/tr_db.log
	@rm -rf $(SIM_DIR)/*/ucli.key
	@rm -rf $(SIM_DIR)/*/vc_hdrs.h
	@rm -rf $(SIM_DIR)/*/.vlogansetup.args
	@rm -rf $(SIM_DIR)/*/.vpd
