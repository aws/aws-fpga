<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>xdma_0_pcie4_ip</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>m_axis_cq</spirit:name>
      <spirit:displayName>m_axis_cq</spirit:displayName>
      <spirit:description>The Completer Request interface is used to transmit Completion TLP&apos;s to the Client Application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>s_axis_cc</spirit:name>
      <spirit:displayName>s_axis_cc</spirit:displayName>
      <spirit:description>The Completer Completion Interface is used to transmit Completion TLP&apos;s</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>s_axis_rq</spirit:name>
      <spirit:displayName>s_axis_rq</spirit:displayName>
      <spirit:description>The Requestor Request interface received requests TLP&apos;s from the Client Application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>m_axis_rc</spirit:name>
      <spirit:displayName>m_axis_rc</spirit:displayName>
      <spirit:description>The Requestor Completer interface transmits completions to the client application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_mgt</spirit:name>
      <spirit:displayName>pcie_7x_mgt</spirit:displayName>
      <spirit:description>PCIExpress Serial Link Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_7x_mgt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_7x_mgt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_rxn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxp</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_rxp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_txn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txp</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_txp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_mgt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_fc</spirit:name>
      <spirit:displayName>pcie_cfg_fc</spirit:displayName>
      <spirit:description>Configuration Flow Control INTERFACE</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_fc" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_fc_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CPLD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_cpld</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CPLH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_cplh</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>NPD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_npd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>NPH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_nph</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_pd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_ph</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>SEL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_sel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_fc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_mgmt</spirit:name>
      <spirit:displayName>pcie4_cfg_mgmt</spirit:displayName>
      <spirit:description>PCIE Configuration Management Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_mgmt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_mgmt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BYTE_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_byte_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DEBUG_ACCESS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_debug_access</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>FUNCTION_NUMBER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_WRITE_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read_write_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_write_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_mgmt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_pm</spirit:name>
      <spirit:displayName>pcie4_cfg_pm</spirit:displayName>
      <spirit:description>PCIE4 Power Management Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_pm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_pm_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pm_aspm_l1entry_reject</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_pm_aspm_l1_entry_reject</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pm_aspm_tx_l0s_entry_disable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_pm_aspm_tx_l0s_entry_disable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_pm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_PM_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_msi</spirit:name>
      <spirit:displayName>pcie4_us_cfg_msi</spirit:displayName>
      <spirit:description>PCIE MSI interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msi" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msi_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>attr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_attr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fail</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_fail</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask_update</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_mask_update</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mmenable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_mmenable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pending_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_pending_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pending_status_data_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_pending_status_data_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pending_status_function_num</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_pending_status_function_num</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>select</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_select</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sent</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_present</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_present</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_st_tag</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_st_tag</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_msi" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) != &quot;MSI-X_Internal&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_msix_internal</spirit:name>
      <spirit:displayName>pcie4_cfg_msix_internal</spirit:displayName>
      <spirit:description>PCIE MSIx Int Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pacie4" spirit:name="pcie4_cfg_msix_internal" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_msix_internal_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>attr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_attr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fail</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_fail</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mint_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sent</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_present</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_present</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_st_tag</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_st_tag</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_msix_internal" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_external_msix</spirit:name>
      <spirit:displayName>pcie4_cfg_external_msix</spirit:displayName>
      <spirit:description>PCIE MSI-X Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pacie4" spirit:name="pcie4_cfg_external_msix" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_external_msix_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fail</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_fail</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sent</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_external_msix" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_msix_external</spirit:name>
      <spirit:displayName>pcie4_cfg_msix_external</spirit:displayName>
      <spirit:description>PCIE MSI-X Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pacie4" spirit:name="pcie4_cfg_msix_external" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_msix_external_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vec_pending_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vec_pending_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_msix_external" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_interrupt</spirit:name>
      <spirit:displayName>pcie4_cfg_interrupt</spirit:displayName>
      <spirit:description>PCIE Legacy Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTx_VECTOR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PENDING</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>SENT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_ext</spirit:name>
      <spirit:displayName>pcie4_us_cfg_ext</spirit:displayName>
      <spirit:description>Configuration Extend Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_ext" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_ext_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_data_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_data_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_received</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>register_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_register_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_byte_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_byte_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_received</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_ext" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_mesg_tx</spirit:name>
      <spirit:displayName>pcie4_us_cfg_mesg_tx</spirit:displayName>
      <spirit:description>Configuration Transmit Message Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_mesg_tx" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_mesg_tx_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_TYPE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_mesg_tx" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_mesg_rcvd</spirit:name>
      <spirit:displayName>pcie4_us_cfg_mesg_rcvd</spirit:displayName>
      <spirit:description>Configuration Received Message Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msg_received" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msg_received_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_mesg_rcvd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_control</spirit:name>
      <spirit:displayName>pcie4_us_cfg_control</spirit:displayName>
      <spirit:description>It allows a broad range of information exchange between user application and the core</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_control" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_control_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bus_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_bus_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>config_space_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_config_space_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_bus_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_bus_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_device_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_device_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_port_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_port_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dsn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dsn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_cor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_cor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_uncor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_uncor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>flr_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_flr_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>flr_in_process</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_flr_in_process</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>hot_reset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_hot_reset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>hot_reset_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_hot_reset_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>link_training_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_link_training_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>power_state_change_ack</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_power_state_change_ack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>power_state_change_interrupt</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_power_state_change_interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_pm_transition_l23_ready</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_req_pm_transition_l23_ready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_flr_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_flr_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_flr_func_num</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_flr_func_num</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_flr_in_process</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_flr_in_process</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_control" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pcie_id</spirit:name>
      <spirit:displayName>pcie4_pcie_id</spirit:displayName>
      <spirit:description>PCIE 4 PCIE ID interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_vend_id</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_vend_id</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vend_id</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vend_id</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pcie_id" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pcie_id_pf0</spirit:name>
      <spirit:displayName>pcie4_pcie_id_pf0</spirit:displayName>
      <spirit:description>PCIE 4 PCIE ID interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dev_id_pf0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dev_id_pf0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rev_id_pf0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rev_id_pf0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_id_pf0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_id_pf0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pcie_id_pf0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pcie_id_pf1</spirit:name>
      <spirit:displayName>pcie4_pcie_id_pf1</spirit:displayName>
      <spirit:description>PCIE 4 PCIE ID interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dev_id_pf1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dev_id_pf1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rev_id_pf1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rev_id_pf1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_id_pf1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_id_pf1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pcie_id_pf1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pcie_id_pf2</spirit:name>
      <spirit:displayName>pcie4_pcie_id_pf2</spirit:displayName>
      <spirit:description>PCIE 4 PCIE ID interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dev_id_pf2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dev_id_pf2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rev_id_pf2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rev_id_pf2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_id_pf2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_id_pf2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pcie_id_pf2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pcie_id_pf3</spirit:name>
      <spirit:displayName>pcie4_pcie_id_pf3</spirit:displayName>
      <spirit:description>PCIE 4 PCIE ID interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pcie_id_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dev_id_pf3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dev_id_pf3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rev_id_pf3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rev_id_pf3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_id_pf3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_id_pf3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pcie_id_pf3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_cfg_status</spirit:name>
      <spirit:displayName>pcie4_us_cfg_status</spirit:displayName>
      <spirit:description>Configuration Status Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_status" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_cfg_status_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cq_np_req</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_cq_np_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cq_np_req_count</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_cq_np_req_count</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>current_speed</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_current_speed</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_cor_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_cor_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_fatal_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_fatal_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_nonfatal_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_nonfatal_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_function_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_function_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>link_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_link_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>local_error_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_local_error_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>local_error_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_local_error_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ltssm_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ltssm_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>max_payload</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_max_payload</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>max_read_req</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_max_read_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>negotiated_width</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_negotiated_width</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>obff_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_obff_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phy_link_down</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_phy_link_down</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phy_link_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_phy_link_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pl_status_change</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_pl_status_change</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rcb_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rcb_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num_vld0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num_vld0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num_vld1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num_vld1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag_av</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag_av</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag_vld0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag_vld0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag_vld1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag_vld1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_pm_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rx_pm_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tfc_npd_av</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_tfc_npd_av</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tfc_nph_av</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_tfc_nph_av</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_requester_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_tph_requester_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_st_mode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_tph_st_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_pm_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_tx_pm_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_tph_requester_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_tph_requester_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_tph_st_mode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_tph_st_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_cfg_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_drp</spirit:name>
      <spirit:displayName>pcie4_us_drp</spirit:displayName>
      <spirit:description>PCIE DRP Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_drp" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_drp_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_en</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DI</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_di</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DO</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_do</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DRDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_rdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DWE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>drp_we</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_drp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK.sys_clk</spirit:name>
      <spirit:displayName>CLK.sys_clk</spirit:displayName>
      <spirit:description>sys_clk interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK.sys_clk_gt</spirit:name>
      <spirit:displayName>CLK.sys_clk_gt</spirit:displayName>
      <spirit:description>sys_clk_gt interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_clk_gt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>RST.sys_rst</spirit:name>
      <spirit:displayName>RST.sys_rst</spirit:displayName>
      <spirit:description>sys_rst interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK.user_clk</spirit:name>
      <spirit:displayName>CLK.user_clk</spirit:displayName>
      <spirit:description>user_clk interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.ASSOCIATED_BUSIF">m_axis_cq:s_axis_cc:s_axis_rq:m_axis_rc</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.FREQ_HZ">125000000</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.ASSOCIATED_RESET">user_reset</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>RST.user_reset</spirit:name>
      <spirit:displayName>RST.user_reset</spirit:displayName>
      <spirit:description>user_reset interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.RST.USER_RESET.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_pl</spirit:name>
      <spirit:displayName>pcie4_pl</spirit:displayName>
      <spirit:description>Physical Layer Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pl" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_pl_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eq_in_progress</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_eq_in_progress</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eq_mismatch</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_eq_mismatch</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eq_phase</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_eq_phase</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gen2_upstream_prefer_deemph</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_gen2_upstream_prefer_deemph</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>redo_eq</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_redo_eq</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>redo_eq_pending</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_redo_eq_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>redo_eq_speed</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pl_redo_eq_speed</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_pl" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>configure</spirit:name>
      <spirit:displayName>configure</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie3_ultrascale" spirit:name="configure" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie3_ultrascale" spirit:name="configure_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_req_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_ready</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_req_ready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_reg_num</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_req_reg_num</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_req_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_req_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>resp_rdata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_resp_rdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>resp_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>conf_resp_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.configure" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>cap</spirit:name>
      <spirit:displayName>cap</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="cap" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="cap_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>GNT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cap_gnt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>REL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cap_rel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>REQ</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cap_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.cap" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) != &quot;NONE&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>startup</spirit:name>
      <spirit:displayName>startup</spirit:displayName>
      <spirit:description>STARTUP Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="startup" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="startup_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cfgclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_cfgclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cfgmclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_cfgmclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>di</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_di</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>do</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_do</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_dts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eos</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_eos</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fcsbo</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_fcsbo</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fcsbts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_fcsbts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gsr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_gsr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_gts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>keyclearb</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_keyclearb</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pack</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_pack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>preq</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_preq</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>userdoneo</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrdoneo</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrcclko</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrcclko</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrclkts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrcclkts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrdonets</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrdonets</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.startup" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) = &quot;TANDEM_PROM_FIELD_UPDATES&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_ext_pipe_interface</spirit:name>
      <spirit:displayName>pcie4_ext_pipe_interface</spirit:displayName>
      <spirit:description>PCIE4 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_ext_pipe_interface" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 2)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_ext_pipe_ep</spirit:name>
      <spirit:displayName>pcie4_ext_pipe_ep</spirit:displayName>
      <spirit:description>PCIE4 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_ext_pipe_ep" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 0)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_ext_pipe_ep_legacy</spirit:name>
      <spirit:displayName>pcie4_ext_pipe_ep_legacy</spirit:displayName>
      <spirit:description>PCIE4 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>commands_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_0_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_1_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_2_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_3_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_4_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_5_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_6_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_7_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_8_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_8_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_9_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_9_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_10_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_10_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_11_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_11_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_12_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_12_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_13_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_13_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_14_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_14_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_15_sigs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_15_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_ext_pipe_ep_legacy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_usp_ext_gtcom</spirit:name>
      <spirit:displayName>pcie4_usp_ext_gtcommon</spirit:displayName>
      <spirit:description>PCIE4 Ultrascale+ External GT COMMON Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="ext_gtcom" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="ext_gtcom_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll0lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll0lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll0outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll0outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll0outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll0outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll0pd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll0pd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll0reset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll0reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll1lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll1lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll1outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll1outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll1outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll1outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll1pd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll1pd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpll1reset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpll1reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpllxrate</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpllxrate</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>exts_qpllxrefclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_qpllxrefclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_usp_ext_gtcom" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_usp_int_gtcom</spirit:name>
      <spirit:displayName>pcie4_usp_int_gtcommon</spirit:displayName>
      <spirit:description>PCIE4 Ultrascale+ Internal GT COMMON Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="int_gtcom" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="int_gtcom_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll0lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll0lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll0outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll0outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll0outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll0outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll1lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll1lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll1outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll1outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ints_qpll1outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qpll1outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_usp_int_gtcom" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_ext_ch_gt</spirit:name>
      <spirit:displayName>pcie_ext_ch_gt</spirit:displayName>
      <spirit:description>channel DRP signals</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpaddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpen</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DI</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpdi</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DO</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpdo</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DRDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drprdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DWE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpwe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie_ext_ch_gt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>transceiver_debug</spirit:name>
      <spirit:displayName>transceiver_debug</spirit:displayName>
      <spirit:description>Transceiver Debug Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="transceiver_debug" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4_uscaleplus" spirit:name="transceiver_debug_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtdiv</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_bufgtdiv</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpll_lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_cplllock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonfiforeset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_dmonfiforeset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonitorclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_dmonitorclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonitorout</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_dmonitorout</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eyescandataerror</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_eyescandataerror</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eyescanreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_eyescanreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gen34_eios_det</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_gen34_eios_det</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gt_pcierategen3_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_pcierategen3_o</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtpowergood</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_gtpowergood</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>loopback</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_loopback</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieuserratedone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_pcieuserratedone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieuserratestart</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_pcieuserratestart</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phystatus</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_phystatus</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pipe_clk_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pipe_tx0_powerdown_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx0_powerdown</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pipe_tx0_rcvr_det_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx0_rcvr_det</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pipe_tx_rate_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_rate_o</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>prst_n</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_prst_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0_lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_qpll0lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1_lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_qpll1lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rate_idle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_pcierateidle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rrst_n</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_rrst_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_rst_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_idle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_rst_idle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbufreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxbufreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbufstatus</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxbufstatus</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrlock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxcdrlock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxcdrreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcommadet</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxcommadet</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfelpmreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxdfelpmreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdlysresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxdlysresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxeq_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_rxeq_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_rxlpmen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxoutclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclkfabric</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxoutclkfabric</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclkpcs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxoutclkpcs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpcsreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxpcsreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxphaligndone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxphaligndone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpmareset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxpmareset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpmaresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxpmaresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbscntreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxprbscntreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbserr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxprbserr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbslocked</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxprbslocked</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbssel</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxprbssel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxrecclkout</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxrecclkout</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxstatus</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxstatus</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxsyncdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxsyncdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxvalid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_rxvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sys_clk_bufg_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_clk_bufg</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdiffctrl_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_txdiffctrl_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlysresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txdlysresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txelecidle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txelecidle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txeq_ctrl</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_txeq_ctrl</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txeq_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_txeq_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txeq_postcursor_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txeq_postcursor_o</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txeq_precursor_o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txeq_precursor_o</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txeq_preset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phy_txeq_preset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txinhibit</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txinhibit</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txoutclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclkfabric</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txoutclkfabric</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclkpcs</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txoutclkpcs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpcsreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txpcsreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphaligndone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txphaligndone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphinitdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txphinitdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpmareset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txpmareset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpmaresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txpmaresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpostcursor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_txpostcursor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbsforceerr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txprbsforceerr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbssel</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txprbssel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprecursor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_txprecursor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprogdivresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txprogdivresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txrate_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ibert_txrate_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_txsyncdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.transceiver_debug" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie4_gt_if</spirit:name>
      <spirit:displayName>pcie4_gt_if</spirit:displayName>
      <spirit:description>GT Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_gt_if" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie4" spirit:name="pcie4_gt_if_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtce_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bufgtce_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtcemask_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bufgtcemask_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtdiv_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bufgtdiv_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtreset_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bufgtreset_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bufgtrstmask_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bufgtrstmask_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpllfreqlock_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cpllfreqlock_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cplllock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cplllock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpllpd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cpllpd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpllreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cpllreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonfiforeset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dmonfiforeset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonitorclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dmonitorclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonitorout_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dmonitorout_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eyescanreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>eyescanreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtpowergood_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtpowergood_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtrefclk0_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtrefclk0_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtrefclk00_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtrefclk00_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtrefclk01_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtrefclk01_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtrxreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtrxreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gttxreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gttxreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtwiz_reset_rx_done_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtwiz_reset_rx_done_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtwiz_reset_tx_done_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtwiz_reset_tx_done_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtwiz_userclk_rx_active_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtwiz_userclk_rx_active_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gtwiz_userclk_tx_active_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gtwiz_userclk_tx_active_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>loopback_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>loopback_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieeqrxeqadaptdone_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcieeqrxeqadaptdone_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierategen3_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierategen3_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierateidle_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierateidle_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierateqpll0_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierateqpll0_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierateqpll1_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierateqpll1_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierateqpllpd_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierateqpllpd_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierateqpllreset_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierateqpllreset_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcierstidle_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcierstidle_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pciersttxsyncstart_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pciersttxsyncstart_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pciesynctxsyncdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pciesynctxsyncdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieusergen3rdy_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcieusergen3rdy_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieuserphystatusrst_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcieuserphystatusrst_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieuserratedone_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcieuserratedone_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pcieuserratestart_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcieuserratestart_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phystatus_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>phystatus_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0freqlock_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0freqlock_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0pd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0pd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll0reset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll0reset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1freqlock_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1freqlock_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1lock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1lock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1outclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1outclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1outrefclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1outrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1pd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1pd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll1reset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll1reset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>resetovrd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>resetovrd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx8b10ben_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx8b10ben_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbufreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxbufreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbufstatus_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxbufstatus_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbyteisaligned_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxbyteisaligned_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbyterealign_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxbyterealign_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrfreqreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcdrfreqreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcdrhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrlock_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcdrlock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcdrreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcdrreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxclkcorcnt_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxclkcorcnt_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcommadet_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcommadet_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcommadeten_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxcommadeten_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxctrl0_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxctrl0_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxctrl1_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxctrl1_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxctrl2_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxctrl2_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxctrl3_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxctrl3_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdata_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdata_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfeagchold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfeagchold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfecfokhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfecfokhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfekhhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfekhhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfelfhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfelfhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfelpmreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfelpmreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap2hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap2hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap3hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap3hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap4hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap4hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap5hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap5hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap6hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap6hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap7hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap7hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap8hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap8hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap9hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap9hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap10hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap10hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap11hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap11hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap12hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap12hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap13hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap13hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap14hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap14hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfetap15hold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfetap15hold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfeuthold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfeuthold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdfevphold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdfevphold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdlysresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxdlysresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxelecidle_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxelecidle_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxlpmen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmgchold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxlpmgchold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmhfhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxlpmhfhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmlfhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxlpmlfhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxlpmoshold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxlpmoshold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxmcommaalignen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxmcommaalignen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoshold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxoshold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxoutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclkfabric_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxoutclkfabric_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclkpcs_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxoutclkpcs_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpcommaalignen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpcommaalignen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpcsreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpcsreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxphaligndone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxphaligndone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpmareset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpmareset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpmaresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpmaresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpolarity_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpolarity_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbscntreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxprbscntreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbserr_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxprbserr_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbslocked_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxprbslocked_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbssel_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxprbssel_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprogdivreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxprogdivreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxrate_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxrate_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxratedone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxratedone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxratemode_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxratemode_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxrecclkout_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxrecclkout_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxslide_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxslide_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxstatus_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxstatus_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxsyncdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxsyncdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxtermination_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxtermination_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxuserrdy_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxuserrdy_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxusrclk2_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxusrclk2_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxusrclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxusrclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxvalid_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxvalid_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx8b10ben_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx8b10ben_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txctrl0_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txctrl0_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txctrl1_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txctrl1_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txctrl2_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txctrl2_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdata_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdata_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdeemph_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdeemph_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdetectrx_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdetectrx_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdiffctrl_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdiffctrl_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlybypass_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlybypass_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlyen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlyen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlyhold_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlyhold_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlyovrden_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlyovrden_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlysreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlysreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlysresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlysresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlyupdown_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdlyupdown_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txelecidle_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txelecidle_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txmaincursor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txmaincursor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txmargin_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txmargin_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txoutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclkfabric_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txoutclkfabric_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclkpcs_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txoutclkpcs_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclksel_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txoutclksel_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpcsreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpcsreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphalign_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphalign_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphaligndone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphaligndone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphalignen_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphalignen_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphdlypd_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphdlypd_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphdlyreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphdlyreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphdlytstclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphdlytstclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphinit_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphinit_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphinitdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphinitdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphovrden_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txphovrden_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpmareset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpmareset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpmaresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpmaresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpostcursor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpostcursor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbsforceerr_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txprbsforceerr_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbssel_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txprbssel_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprecursor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txprecursor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprgdivresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txprgdivresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprogdivreset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txprogdivreset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txrate_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txrate_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txresetdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txresetdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txswing_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txswing_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncallin_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txsyncallin_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncdone_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txsyncdone_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncin_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txsyncin_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncmode_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txsyncmode_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txsyncout_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txsyncout_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txuserrdy_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txuserrdy_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txusrclk2_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txusrclk2_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txusrclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txusrclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie4_gt_if" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_elaboratesubcores</spirit:name>
        <spirit:displayName>Elaborate Sub-Cores</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:elaborate.subcores</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_elaboratesubcores_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 12 17:54:43 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRC</spirit:name>
            <spirit:value>90c57c4b</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>92f01e9f</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>6</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesis</spirit:name>
        <spirit:displayName>Verilog Synthesis</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>xdma_0_pcie4_ip_pcie4_uscale_core_top</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 12 17:55:39 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRC</spirit:name>
            <spirit:value>90c57c4b</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>92f01e9f</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>6</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesiswrapper</spirit:name>
        <spirit:displayName>Verilog Synthesis Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesiswrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 12 17:55:39 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRC</spirit:name>
            <spirit:value>90c57c4b</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>92f01e9f</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>6</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogbehavioralsimulation</spirit:name>
        <spirit:displayName>Verilog Simulation</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>xdma_0_pcie4_ip_pcie4_uscale_core_top</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogbehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 12 17:55:39 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRC</spirit:name>
            <spirit:value>90c57c4b</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>c79a983c</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>6</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsimulationwrapper</spirit:name>
        <spirit:displayName>Verilog Simulation Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsimulationwrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 12 17:55:39 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRC</spirit:name>
            <spirit:value>90c57c4b</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>boundaryCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>c79a983c</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>6</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>pci_exp_txn</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pci_exp_txn" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_txp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pci_exp_txp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_rxn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pci_exp_rxn" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_rxp</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pci_exp_rxp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_reset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_lnk_up</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_DATA_WIDTH&apos;)) - 1)">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_TKEEP_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_RQ_TUSER_WIDTH&apos;)) - 1)">136</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_DATA_WIDTH&apos;)) - 1)">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_TKEEP_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_RC_TUSER_WIDTH&apos;)) - 1)">160</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_DATA_WIDTH&apos;)) - 1)">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_TKEEP_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_CQ_TUSER_WIDTH&apos;)) - 1)">182</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_DATA_WIDTH&apos;)) - 1)">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_TKEEP_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_CC_TUSER_WIDTH&apos;)) - 1)">80</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num_vld0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num_vld0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num_vld1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num_vld1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag_av</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag_av" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag_vld0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag_vld0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag_vld1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag_vld1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_tfc_nph_av</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_tfc_nph_av" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TX_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_tfc_npd_av</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_tfc_npd_av" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TX_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_cq_np_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_cq_np_req" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_cq_np_req_count</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_cq_np_req_count" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_phy_link_down</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_phy_link_down" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_phy_link_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_phy_link_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_negotiated_width</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_negotiated_width" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_current_speed</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_current_speed" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_max_payload</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_max_payload" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_max_read_req</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_max_read_req" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_function_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_function_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_function_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_function_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">503</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">755</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_link_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_link_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">9</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_addr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_write</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_write" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_write_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_write_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_byte_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read_write_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read_write_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_debug_access</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_debug_access" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_cor_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_cor_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_nonfatal_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_nonfatal_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_fatal_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_fatal_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_local_error_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_local_error_valid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_local_error_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_local_error_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ltssm_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ltssm_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rx_pm_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rx_pm_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_tx_pm_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_tx_pm_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rcb_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rcb_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_obff_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_obff_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_pl_status_change</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_pl_status_change" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_tph_requester_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_tph_requester_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_tph_st_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_tph_st_mode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_tph_requester_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">251</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_tph_requester_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_tph_st_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">755</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_tph_st_mode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received_type</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_ph</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_ph" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_pd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_pd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_nph</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_nph" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_npd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_npd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_cplh</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_cplh" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_cpld</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_cpld" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_sel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_sel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dsn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dsn" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_bus_number</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_bus_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_power_state_change_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_power_state_change_ack" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_power_state_change_interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_power_state_change_interrupt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_cor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_cor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_uncor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_uncor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_flr_in_process</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_flr_in_process" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_flr_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_flr_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_flr_in_process</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">251</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_flr_in_process" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_flr_func_num</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_flr_func_num" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_flr_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_flr_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_link_training_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_link_training_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_read_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_register_number</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">9</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_register_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_byte_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_byte_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_read_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_EXT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_data_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_pending</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_sent</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_mmenable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_mmenable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_mask_update</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_mask_update" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_select</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_select" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_INT&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_int" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_pending_status</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_pending_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_pending_status_data_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_pending_status_data_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_pending_status_function_num</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_pending_status_function_num" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_sent</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_sent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_fail</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_fail" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_attr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_attr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_present</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_present" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_st_tag</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_st_tag" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_mask</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_mask" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">251</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vf_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">251</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vf_mask" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_pm_aspm_l1_entry_reject</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_pm_aspm_l1_entry_reject" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_PM_IF&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_pm_aspm_tx_l0s_entry_disable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_pm_aspm_tx_l0s_entry_disable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_PM_IF&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot;  and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_address</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_address" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot;  and spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_int" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vec_pending</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vec_pending" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vec_pending_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vec_pending_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_Internal&quot; || spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_X_OPTIONS&apos;)) = &quot;MSI-X_External&quot;))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_hot_reset_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_hot_reset_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_config_space_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_config_space_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_req_pm_transition_l23_ready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_req_pm_transition_l23_ready" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_hot_reset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_hot_reset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_port_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_port_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_bus_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_bus_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_device_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_device_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_vend_id</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID&apos;))" spirit:bitStringLength="16">0x10EE</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_vend_id" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dev_id_pf0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEVICE_ID&apos;))" spirit:bitStringLength="16">0x1042</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dev_id_pf0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dev_id_pf1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF1_DEVICE_ID&apos;))" spirit:bitStringLength="16">0x1041</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dev_id_pf1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dev_id_pf2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF2_DEVICE_ID&apos;))" spirit:bitStringLength="16">0x1040</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dev_id_pf2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dev_id_pf3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF3_DEVICE_ID&apos;))" spirit:bitStringLength="16">0x1039</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dev_id_pf3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vend_id</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_VENDOR_ID&apos;))" spirit:bitStringLength="16">0x1D0F</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vend_id" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rev_id_pf0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_REVISION_ID&apos;))" spirit:bitStringLength="8">0x00</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rev_id_pf0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 0 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rev_id_pf1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF1_REVISION_ID&apos;))" spirit:bitStringLength="8">0x00</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rev_id_pf1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rev_id_pf2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF2_REVISION_ID&apos;))" spirit:bitStringLength="8">0x00</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rev_id_pf2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rev_id_pf3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF3_REVISION_ID&apos;))" spirit:bitStringLength="8">0x00</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rev_id_pf3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_id_pf0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_SUBSYSTEM_ID&apos;))" spirit:bitStringLength="16">0x0007</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_id_pf0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 0 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_id_pf1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF1_SUBSYSTEM_ID&apos;))" spirit:bitStringLength="16">0x0007</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_id_pf1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_id_pf2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF2_SUBSYSTEM_ID&apos;))" spirit:bitStringLength="16">0x0007</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_id_pf2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and (spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 2 or spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_id_pf3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF3_SUBSYSTEM_ID&apos;))" spirit:bitStringLength="16">0x0007</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_id_pf3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_ID_IF&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TL_PF_ENABLE_REG&apos;)) = 3)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_clk_gt</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_req_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_req_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_req_reg_num</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_req_reg_num" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_req_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_req_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_req_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_req_valid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_req_ready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_req_ready" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_resp_rdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_resp_rdata" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>conf_resp_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.conf_resp_valid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_gen2_upstream_prefer_deemph</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_gen2_upstream_prefer_deemph">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_eq_in_progress</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_eq_in_progress">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_redo_eq</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_redo_eq">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_redo_eq_speed</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_redo_eq_speed">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_eq_mismatch</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_eq_mismatch">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_redo_eq_pending</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_redo_eq_pending">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pl_eq_phase</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.pl_eq_phase">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpllxrefclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpllxrefclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpllxrate</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(((((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4) + 1) * 3) -1)">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpllxrate" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll0pd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll0pd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll0reset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll0reset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll0lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll0lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll0outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll0outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll0outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll0outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll0lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll0lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll0outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll0outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll0outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll0outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll1pd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll1pd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll1reset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll1reset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll1lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll1lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll1outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll1outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_qpll1outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_qpll1outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll1lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll1lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll1outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll1outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qpll1outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qpll1outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTCOM_IN_CORE&apos;)) != 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>common_commands_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">25</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.common_commands_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_0_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_0_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_1_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_1_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_2_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_2_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_3_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_3_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_4_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_4_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_5_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_5_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_6_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_6_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_7_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_7_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_8_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_8_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_9_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_9_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_10_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_10_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_11_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_11_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_12_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_12_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_13_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_13_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_14_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_14_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_15_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_15_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>common_commands_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">25</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.common_commands_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_0_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_0_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_1_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_1_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_2_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_2_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_3_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_3_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_4_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_4_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_5_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_5_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_6_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_6_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_7_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_7_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_8_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_8_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_9_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_9_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_10_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_10_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_11_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_11_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_12_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_12_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_13_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_13_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_14_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_14_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_15_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_15_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PIPE_SIM&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_txprecursor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_txprecursor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_txpostcursor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_txpostcursor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_txrate_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_txrate_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_eyescanreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_eyescanreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_txdiffctrl_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_txdiffctrl_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ibert_rxlpmen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ibert_rxlpmen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txeq_precursor_o</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txeq_precursor_o" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txeq_postcursor_o</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txeq_postcursor_o" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_rate_o</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_rate_o" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_pcierategen3_o</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_pcierategen3_o" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_pcieuserratedone</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_pcieuserratedone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_loopback</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_loopback" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txprbsforceerr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txprbsforceerr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txinhibit</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txinhibit" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txprbssel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 4) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txprbssel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxprbssel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 4) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxprbssel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxprbscntreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxprbscntreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txelecidle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txelecidle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxpmaresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxpmaresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txphaligndone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txphaligndone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txphinitdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txphinitdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txdlysresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txdlysresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxphaligndone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxphaligndone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxdlysresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxdlysresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxsyncdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxsyncdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_eyescandataerror</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_eyescandataerror" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxprbserr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxprbserr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_dmonfiforeset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_dmonfiforeset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_dmonitorclk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_dmonitorclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_dmonitorout</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_dmonitorout" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxcommadet</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxcommadet" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_phystatus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_phystatus" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxvalid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxcdrlock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxcdrlock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_pcierateidle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_pcierateidle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_pcieuserratestart</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_pcieuserratestart" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_gtpowergood</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_gtpowergood" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_cplllock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_cplllock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxoutclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxoutclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxrecclkout</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxrecclkout" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_qpll1lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_qpll1lock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_qpll0lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_qpll0lock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxstatus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxstatus" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxbufstatus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxbufstatus" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_bufgtdiv</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_bufgtdiv" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_txeq_ctrl</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_txeq_ctrl" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_txeq_preset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 4) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_txeq_preset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rst_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rst_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_txeq_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_txeq_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rxeq_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rxeq_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rst_idle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rst_idle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rrst_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rrst_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_prst_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_prst_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx0_rcvr_det</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx0_rcvr_det" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_JTAG_DBG&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_clk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_JTAG_DBG&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_clk_bufg</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.sys_clk_bufg" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_JTAG_DBG&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx0_powerdown</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx0_powerdown" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_JTAG_DBG&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_gen34_eios_det</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_gen34_eios_det" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txoutclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txoutclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txoutclkfabric</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txoutclkfabric" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxoutclkfabric</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxoutclkfabric" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txoutclkpcs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txoutclkpcs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxoutclkpcs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxoutclkpcs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txpmareset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txpmareset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxpmareset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxpmareset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txpcsreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txpcsreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxpcsreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxpcsreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxbufreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxbufreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxcdrreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxcdrreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxdfelpmreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxdfelpmreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txprogdivresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txprogdivresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txpmaresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txpmaresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_txsyncdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_txsyncdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_rxprbslocked</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_rxprbslocked" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpaddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 10) - 1)">159</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpaddr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpen</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpen" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpdi</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpdi" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpwe</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpwe" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpdo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpdo" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drprdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drprdy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot; or (spirit:decode(id(&apos;MODELPARAM_VALUE.ENABLE_IBERT&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_rdy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_do</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_do" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_clk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_en" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_we</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_we" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">9</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_addr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drp_di</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drp_di" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE4_DRP&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtrefclk01_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtrefclk01_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtrefclk00_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtrefclk00_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierateqpll0_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(((((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4) + 1) * 3) -1)">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierateqpll0_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierateqpll1_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(((((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4) + 1) * 3) -1)">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierateqpll1_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0pd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0pd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0reset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0reset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1pd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1pd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1reset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1reset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1lock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1lock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1outclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1outclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1outrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1 )/4)">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1outrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll0freqlock_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll0freqlock_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll1freqlock_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll1freqlock_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierateqpllpd_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierateqpllpd_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierateqpllreset_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierateqpllreset_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.PLL_TYPE&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtwiz_reset_rx_done_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtwiz_reset_rx_done_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtwiz_reset_tx_done_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtwiz_reset_tx_done_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtwiz_userclk_rx_active_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtwiz_userclk_rx_active_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtwiz_userclk_tx_active_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtwiz_userclk_tx_active_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>loopback_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.loopback_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxprbssel_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 4) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxprbssel_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxrate_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxrate_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txctrl0_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txctrl0_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txctrl1_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txctrl1_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txctrl2_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 8) - 1)">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txctrl2_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdata_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 128) - 1)">2047</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdata_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdeemph_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdeemph_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdiffctrl_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdiffctrl_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txprbssel_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 4) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txprbssel_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txprecursor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txprecursor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txrate_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txrate_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txmaincursor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 7) - 1)">111</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txmaincursor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txmargin_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txmargin_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txoutclksel_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txoutclksel_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpostcursor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">79</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpostcursor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cpllfreqlock_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cpllfreqlock_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cpllpd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cpllpd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cpllreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cpllreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dmonfiforeset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dmonfiforeset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dmonitorclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dmonitorclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>eyescanreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.eyescanreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtrefclk0_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtrefclk0_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtrxreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtrxreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gttxreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gttxreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcieeqrxeqadaptdone_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcieeqrxeqadaptdone_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierstidle_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierstidle_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pciersttxsyncstart_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pciersttxsyncstart_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcieuserratedone_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcieuserratedone_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>resetovrd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.resetovrd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx8b10ben_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx8b10ben_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxbufreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxbufreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcdrfreqreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcdrfreqreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcdrhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcdrhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcdrreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcdrreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcommadeten_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcommadeten_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfeagchold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfeagchold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfecfokhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfecfokhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfekhhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfekhhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfelfhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfelfhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfelpmreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfelpmreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap10hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap10hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap11hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap11hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap12hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap12hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap13hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap13hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap14hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap14hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap15hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap15hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap2hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap2hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap3hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap3hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap4hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap4hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap5hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap5hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap6hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap6hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap7hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap7hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap8hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap8hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfetap9hold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfetap9hold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfeuthold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfeuthold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdfevphold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdfevphold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxlpmen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxlpmen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxlpmgchold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxlpmgchold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxlpmhfhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxlpmhfhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxlpmlfhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxlpmlfhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxlpmoshold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxlpmoshold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxmcommaalignen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxmcommaalignen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxoshold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxoshold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpcommaalignen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpcommaalignen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpcsreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpcsreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpmareset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpmareset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpolarity_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpolarity_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxprbscntreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxprbscntreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxprogdivreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxprogdivreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxslide_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxslide_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxtermination_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxtermination_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxuserrdy_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxuserrdy_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxusrclk2_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxusrclk2_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxusrclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxusrclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx8b10ben_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx8b10ben_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdetectrx_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdetectrx_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlybypass_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlybypass_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlyen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlyen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlyhold_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlyhold_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlyovrden_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlyovrden_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlysreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlysreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlyupdown_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlyupdown_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txelecidle_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txelecidle_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpcsreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpcsreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphalign_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphalign_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphalignen_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphalignen_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphdlypd_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphdlypd_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphdlyreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphdlyreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphdlytstclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphdlytstclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphinit_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphinit_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphovrden_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphovrden_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxratemode_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxratemode_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpmareset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpmareset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txprbsforceerr_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txprbsforceerr_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txprogdivreset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txprogdivreset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txswing_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txswing_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txsyncallin_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txsyncallin_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txsyncin_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txsyncin_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txsyncmode_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txsyncmode_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txuserrdy_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txuserrdy_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txusrclk2_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txusrclk2_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txusrclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txusrclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxclkcorcnt_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxclkcorcnt_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bufgtcemask_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bufgtcemask_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bufgtrstmask_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bufgtrstmask_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxbufstatus_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxbufstatus_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxstatus_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxstatus_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxctrl2_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 8) - 1)">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxctrl2_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxctrl3_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 8) - 1)">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxctrl3_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bufgtdiv_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 9) - 1)">143</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bufgtdiv_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dmonitorout_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dmonitorout_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxctrl0_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxctrl0_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxctrl1_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxctrl1_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdata_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 128) - 1)">2047</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdata_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bufgtreset_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bufgtreset_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bufgtce_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bufgtce_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cplllock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cplllock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gtpowergood_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gtpowergood_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierategen3_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierategen3_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcierateidle_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcierateidle_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pciesynctxsyncdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pciesynctxsyncdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcieusergen3rdy_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcieusergen3rdy_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcieuserphystatusrst_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcieuserphystatusrst_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcieuserratestart_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcieuserratestart_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phystatus_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phystatus_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxbyteisaligned_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxbyteisaligned_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxbyterealign_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxbyterealign_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcdrlock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcdrlock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxcommadet_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxcommadet_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxphaligndone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxphaligndone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpmaresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpmaresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxdlysresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxdlysresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxelecidle_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxelecidle_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxoutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxoutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxoutclkfabric_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxoutclkfabric_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxoutclkpcs_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxoutclkpcs_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxprbserr_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxprbserr_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxprbslocked_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxprbslocked_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxratedone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxratedone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxrecclkout_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxrecclkout_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxsyncdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxsyncdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdlysresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdlysresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxvalid_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxvalid_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txoutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txoutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txoutclkfabric_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txoutclkfabric_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txoutclkpcs_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txoutclkpcs_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphaligndone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphaligndone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txphinitdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txphinitdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpmaresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpmaresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txprgdivresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txprgdivresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txresetdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txresetdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txsyncdone_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txsyncdone_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txsyncout_out</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 1) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txsyncout_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.GTWIZ_IN_CORE&apos;)) = 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cap_req</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cap_req" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) != &quot;NONE&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cap_gnt</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cap_gnt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) != &quot;NONE&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cap_rel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cap_rel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) != &quot;NONE&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>mcap_design_switch</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.mcap_design_switch" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MCAP_ENABLEMENT&apos;)) != &quot;NONE&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_CONFIGURATION&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="integer">
        <spirit:name>PL_LINK_CAP_MAX_LINK_SPEED</spirit:name>
        <spirit:displayName>Pl Link Cap Max Link Speed</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED">4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PL_LINK_CAP_MAX_LINK_WIDTH</spirit:name>
        <spirit:displayName>Pl Link Cap Max Link Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>CRM_USER_CLK_FREQ</spirit:name>
        <spirit:displayName>User Clk Freq</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CRM_USER_CLK_FREQ">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CRM_CORE_CLK_FREQ_500</spirit:name>
        <spirit:displayName>Core Clk Freq</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CRM_CORE_CLK_FREQ_500">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PLL_TYPE</spirit:name>
        <spirit:displayName>PLL Type</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PLL_TYPE">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_LINK_CAP_ASPM_SUPPORT</spirit:name>
        <spirit:displayName>ASPM Support</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_LINK_CAP_ASPM_SUPPORT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_DATA_WIDTH</spirit:name>
        <spirit:displayName>C Data Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI4_DATA_WIDTH">512</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PHY_REFCLK_FREQ</spirit:name>
        <spirit:displayName>Ref Clk Freq</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_REFCLK_FREQ">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_TKEEP_WIDTH</spirit:name>
        <spirit:displayName>Keep Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="MODELPARAM_VALUE.AXI4_TKEEP_WIDTH" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.AXI4_DATA_WIDTH&apos;)) div 32)">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_RQ_TUSER_WIDTH</spirit:name>
        <spirit:displayName>RQ User Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI4_RQ_TUSER_WIDTH">137</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_CQ_TUSER_WIDTH</spirit:name>
        <spirit:displayName>CQ User Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI4_CQ_TUSER_WIDTH">183</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_RC_TUSER_WIDTH</spirit:name>
        <spirit:displayName>RC User Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI4_RC_TUSER_WIDTH">161</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI4_CC_TUSER_WIDTH</spirit:name>
        <spirit:displayName>CC User Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI4_CC_TUSER_WIDTH">81</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>ARI_CAP_ENABLE</spirit:name>
        <spirit:displayName>Ari Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.ARI_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_ARI_CAP_NEXT_FUNC</spirit:name>
        <spirit:displayName>Pf0 ARI Cap Next Func</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_ARI_CAP_NEXT_FUNC" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>AXISTEN_IF_CC_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Cc Alignment Mode</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_CC_ALIGNMENT_MODE" spirit:bitStringLength="2">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>AXISTEN_IF_CQ_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Cq Alignment Mode</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_CQ_ALIGNMENT_MODE" spirit:bitStringLength="2">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>AXISTEN_IF_RC_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Rc Alignment Mode</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RC_ALIGNMENT_MODE" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>AXISTEN_IF_RQ_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Rq Alignment Mode</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RQ_ALIGNMENT_MODE" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_EXT_512_CQ_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If CQ Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_EXT_512_CQ_STRADDLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_EXT_512_CC_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If CC Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_EXT_512_CC_STRADDLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_EXT_512_RQ_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If RQ Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_EXT_512_RQ_STRADDLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_EXT_512_RC_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If RC Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_EXT_512_RC_STRADDLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_EXT_512_RC_4TLP_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If 512 4TLP/2TLP Rc Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_EXT_512_RC_4TLP_STRADDLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_RC_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RC_STRADDLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE</spirit:name>
        <spirit:displayName>Pf0 Aer Cap Ecrc Gen and Check Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR0_APERTURE_SIZE" spirit:bitStringLength="9">0x012</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR0_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR1_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR2_APERTURE_SIZE" spirit:bitStringLength="9">0x009</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR2_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR3_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR4_APERTURE_SIZE" spirit:bitStringLength="9">0x014</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR4_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR5_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf0 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_CAPABILITY_POINTER" spirit:bitStringLength="8">0x40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf0 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_VENDOR_ID</spirit:name>
        <spirit:displayName>Pf0 Vendor Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_VENDOR_ID" spirit:bitStringLength="16">0x1D0F</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf0 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEVICE_ID" spirit:bitStringLength="16">0x1042</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 128b Cas Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 32b Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 64b Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 Tph Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP_EXT_TAG_SUPPORTED</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Ext Tag Supported</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_EXT_TAG_SUPPORTED">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Function Level Reset Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0x3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>DSN_CAP_ENABLE</spirit:name>
        <spirit:displayName>Dsn Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DSN_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_VC_CAP_ENABLE</spirit:name>
        <spirit:displayName>Vc Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_VC_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf0 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf0 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_INTERRUPT_PIN" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_LINK_STATUS_SLOT_CLOCK_CONFIG</spirit:name>
        <spirit:displayName>Pf0 Link Status Slot Clock Config</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x70</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_PBA_BIR">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00008FE0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00008000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x020</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf0 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x48</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D0</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D0</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D0">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D1</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D1</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D1">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D3HOT</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D3hot</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D3HOT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_SUPP_D1_STATE</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Supp D1 State</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_SUPP_D1_STATE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_REVISION_ID</spirit:name>
        <spirit:displayName>Pf0 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf0 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf0 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SUBSYSTEM_VENDOR_ID</spirit:name>
        <spirit:displayName>Pf0 Subsystem Vendor Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" spirit:bitStringLength="16">0x10EE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf0 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_TPHR_CAP_ENABLE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf2 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf3 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_DEV_SPECIFIC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_INT_VEC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_SECONDARY_PCIE_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Secondary Pcie Extended Capability Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SECONDARY_PCIE_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>MCAP_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>MCAP Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MCAP_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF0_VC_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Vc Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_VC_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>SPARE_WORD1</spirit:name>
        <spirit:displayName>Secondary Pcie Extended Capability Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SPARE_WORD1" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR0_APERTURE_SIZE" spirit:bitStringLength="9">0x007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR0_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR1_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR2_APERTURE_SIZE" spirit:bitStringLength="9">0x007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR2_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR3_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR4_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR5_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf1 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_CAPABILITY_POINTER" spirit:bitStringLength="8">0x40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf1 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf1 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DEVICE_ID" spirit:bitStringLength="16">0x1041</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf1 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0x3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf1 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf1 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_INTERRUPT_PIN" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x70</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf1 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_REVISION_ID</spirit:name>
        <spirit:displayName>Pf1 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf1 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf1 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf1 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF1_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR0_APERTURE_SIZE" spirit:bitStringLength="9">0x009</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR0_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR1_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR2_APERTURE_SIZE" spirit:bitStringLength="9">0x005</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR2_CONTROL" spirit:bitStringLength="3">0x7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR3_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR4_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR5_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf2 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_CAPABILITY_POINTER" spirit:bitStringLength="8">0x40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf2 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf2 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_DEVICE_ID" spirit:bitStringLength="16">0x1040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf2 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0x3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF2_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf2 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf2 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_INTERRUPT_PIN" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x70</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF2_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF2_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF2_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf2 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_REVISION_ID</spirit:name>
        <spirit:displayName>Pf2 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf2 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf2 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf2 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf2 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf2 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf2 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0002</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf2 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf2 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf2 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF2_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf2 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR0_APERTURE_SIZE" spirit:bitStringLength="9">0x00A</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR0_CONTROL" spirit:bitStringLength="3">0x4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR1_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR2_APERTURE_SIZE" spirit:bitStringLength="9">0x00A</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR2_CONTROL" spirit:bitStringLength="3">0x4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR3_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR4_APERTURE_SIZE" spirit:bitStringLength="9">0x00A</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR4_CONTROL" spirit:bitStringLength="3">0x4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR5_APERTURE_SIZE" spirit:bitStringLength="9">0x00A</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_BAR5_CONTROL" spirit:bitStringLength="3">0x4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf3 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_CAPABILITY_POINTER" spirit:bitStringLength="8">0x40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf3 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf3 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_DEVICE_ID" spirit:bitStringLength="16">0x1039</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf3 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0x3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x1C0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="9">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF3_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf3 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf3 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_INTERRUPT_PIN" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x70</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF3_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF3_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF3_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf3 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x60</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_REVISION_ID</spirit:name>
        <spirit:displayName>Pf3 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf3 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf3 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf3 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf3 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf3 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf3 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0003</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf3 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf3 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf3 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>PF3_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf3 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x400</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PL_UPSTREAM_FACING</spirit:name>
        <spirit:displayName>Pl Upstream Facing</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_UPSTREAM_FACING">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PL_DISABLE_LANE_REVERSAL</spirit:name>
        <spirit:displayName>Pl Disable Lane Reversal</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_DISABLE_LANE_REVERSAL">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_MSI_CAP_PERVECMASKCAP</spirit:name>
        <spirit:displayName>en pf0 msi per vec masking</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSI_CAP_PERVECMASKCAP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_MSI_CAP_PERVECMASKCAP</spirit:name>
        <spirit:displayName>en pf1 msi per vec masking</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSI_CAP_PERVECMASKCAP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF2_MSI_CAP_PERVECMASKCAP</spirit:name>
        <spirit:displayName>en pf2 msi per vec masking</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF2_MSI_CAP_PERVECMASKCAP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF3_MSI_CAP_PERVECMASKCAP</spirit:name>
        <spirit:displayName>en pf3 msi per vec masking</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF3_MSI_CAP_PERVECMASKCAP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>SRIOV_CAP_ENABLE</spirit:name>
        <spirit:displayName>Sriov Cap Enable</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SRIOV_CAP_ENABLE" spirit:bitStringLength="4">0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_CD</spirit:name>
        <spirit:displayName>Tl Credits Cd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_CD" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_CH</spirit:name>
        <spirit:displayName>Tl Credits Ch</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_CH" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_NPD</spirit:name>
        <spirit:displayName>Tl Credits Npd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_NPD" spirit:bitStringLength="12">0x004</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_NPH</spirit:name>
        <spirit:displayName>Tl Credits Nph</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_NPH" spirit:bitStringLength="8">0x20</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_PD</spirit:name>
        <spirit:displayName>Tl Credits Pd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_PD" spirit:bitStringLength="12">0x3E0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_CREDITS_PH</spirit:name>
        <spirit:displayName>Tl Credits Ph</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_PH" spirit:bitStringLength="8">0x20</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXTENDED_CFG_EXTEND_INTERFACE_ENABLE</spirit:name>
        <spirit:displayName>Tl Extended Cfg Extend Interface Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXTENDED_CFG_EXTEND_INTERFACE_ENABLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>LEGACY_CFG_EXTEND_INTERFACE_ENABLE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.LEGACY_CFG_EXTEND_INTERFACE_ENABLE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TL_LEGACY_MODE_ENABLE</spirit:name>
        <spirit:displayName>Tl Legacy Mode Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_LEGACY_MODE_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_PF_ENABLE_REG</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_PF_ENABLE_REG">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VF0_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Vf0 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_CAPABILITY_POINTER" spirit:bitStringLength="8">0x40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>TL_COMPLETION_RAM_SIZE</spirit:name>
        <spirit:displayName>Completion Space</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_COMPLETION_RAM_SIZE" spirit:bitStringLength="2">0x2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y0_xdc</spirit:name>
        <spirit:displayName>Generate X0Y0 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y0_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y1_xdc</spirit:name>
        <spirit:displayName>Generate X0Y1 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y1_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y2_xdc</spirit:name>
        <spirit:displayName>Generate X0Y2 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y2_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y3_xdc</spirit:name>
        <spirit:displayName>Generate X0Y3 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y3_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y4_xdc</spirit:name>
        <spirit:displayName>Generate X0Y4 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y4_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x0y5_xdc</spirit:name>
        <spirit:displayName>Generate X0Y5 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y5_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y0_xdc</spirit:name>
        <spirit:displayName>Generate X1Y0 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y0_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y1_xdc</spirit:name>
        <spirit:displayName>Generate X1Y1 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y1_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y2_xdc</spirit:name>
        <spirit:displayName>Generate X1Y2 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y2_xdc">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y3_xdc</spirit:name>
        <spirit:displayName>Generate X1Y3 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y3_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y4_xdc</spirit:name>
        <spirit:displayName>Generate X1Y4 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y4_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>gen_x1y5_xdc</spirit:name>
        <spirit:displayName>Generate X1Y5 XDC</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x1y5_xdc">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>xlnx_ref_board</spirit:name>
        <spirit:displayName>Xlnx Ref Board</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.xlnx_ref_board">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>pcie_blk_locn</spirit:name>
        <spirit:displayName>Pcie Blk Locn</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.pcie_blk_locn">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PIPE_SIM</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PIPE_SIM">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_ENABLE_CLIENT_TAG</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_ENABLE_CLIENT_TAG">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_FAST_CONFIG</spirit:name>
        <spirit:displayName>PCIE FAST CONFIG</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_FAST_CONFIG">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXT_STARTUP_PRIMITIVE</spirit:name>
        <spirit:displayName>EXT STARTUP PRIMITIVE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PL_INTERFACE</spirit:name>
        <spirit:displayName>PL INTERFACE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_INTERFACE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_CONFIGURATION</spirit:name>
        <spirit:displayName>PCIE CONFIGURATION</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_CONFIGURATION">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_STATUS_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_STATUS_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TX_FC_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TX_FC_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_EXT_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_EXT_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_FC_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_FC_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PER_FUNC_STATUS_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PER_FUNC_STATUS_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_MGMT_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_MGMT_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>RCV_MSG_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.RCV_MSG_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_TX_MSG_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_TX_MSG_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_CTL_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_CTL_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_PM_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_PM_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_ID_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_ID_IF">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MSI_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSI_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MSIX_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSIX_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE4_DRP</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE4_DRP">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>DIS_GT_WIZARD</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DIS_GT_WIZARD">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>BMD_PIO_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.BMD_PIO_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SRIOV_EXD_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SRIOV_EXD_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>DBG_CHECKER</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DBG_CHECKER">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>ENABLE_IBERT</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.ENABLE_IBERT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>GEN4_EIEOS_0S7</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.GEN4_EIEOS_0S7">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>ENABLE_JTAG_DBG</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.ENABLE_JTAG_DBG">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TWO_PORT_SWITCH</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TWO_PORT_SWITCH">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TWO_PORT_CONFIG</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TWO_PORT_CONFIG">X8G3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TRANSCEIVER_CTRL_STATUS_PORTS</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>SHARED_LOGIC</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SHARED_LOGIC">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>GTWIZ_IN_CORE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.GTWIZ_IN_CORE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>GTCOM_IN_CORE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.GTCOM_IN_CORE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_RX_PARITY_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RX_PARITY_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_TX_PARITY_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_TX_PARITY_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_MSIX_RX_PARITY_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_MSIX_RX_PARITY_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>LL_TX_TLP_PARITY_CHK</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.LL_TX_TLP_PARITY_CHK">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>LL_RX_TLP_PARITY_GEN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.LL_RX_TLP_PARITY_GEN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TL2CFG_IF_PARITY_CHK</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL2CFG_IF_PARITY_CHK">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_ENABLE_INTERNAL_MSIX_TABLE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_ENABLE_INTERNAL_MSIX_TABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>DEDICATE_PERST</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DEDICATE_PERST">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>SYS_RESET_POLARITY</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SYS_RESET_POLARITY">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MCAP_ENABLEMENT</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MCAP_ENABLEMENT">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXT_CH_GT_DRP</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXT_CH_GT_DRP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EN_GT_SELECTION</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EN_GT_SELECTION">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SELECT_QUAD</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SELECT_QUAD">GTY_Quad_227</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>silicon_revision</spirit:name>
        <spirit:displayName>Silicon Revision</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.silicon_revision">ES1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>DEV_PORT_TYPE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DEV_PORT_TYPE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG0_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG0_MSIX_CAP_PBA_BIR">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG0_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG0_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00008FE0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG0_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG0_MSIX_CAP_TABLE_BIR">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG0_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG0_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00008000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG0_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG0_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x020</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG1_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG1_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG1_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG1_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG1_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG1_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG1_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG1_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG1_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG1_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG2_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG2_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG2_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG2_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG2_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG2_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG2_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG2_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG2_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG2_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG3_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG3_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG3_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG3_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000050</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VFG3_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG3_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG3_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG3_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000040</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector">
        <spirit:name>VFG3_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VFG3_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EN_PARITY</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EN_PARITY">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>INS_LOSS_PROFILE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.INS_LOSS_PROFILE">CHIP-TO-CHIP</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MSI_X_OPTIONS</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSI_X_OPTIONS">MSI-X_External</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>COMPLETER_MODEL</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.COMPLETER_MODEL">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>DBG_DESCRAMBLE_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DBG_DESCRAMBLE_EN">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>MSI_INT</spirit:name>
        <spirit:displayName>MSI Ints</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSI_INT">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>VU9P_BOARD</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VU9P_BOARD">FALSE</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choice_list_002f5e3f</spirit:name>
      <spirit:enumeration>PCI_Express_Endpoint_device</spirit:enumeration>
      <spirit:enumeration>Legacy_PCI_Express_Endpoint_device</spirit:enumeration>
      <spirit:enumeration>Root_Port_of_PCI_Express_Root_Complex</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_0914ad92</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>Tandem_PROM</spirit:enumeration>
      <spirit:enumeration>Tandem_PCIe</spirit:enumeration>
      <spirit:enumeration>PR_over_PCIe</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_0f93492c</spirit:name>
      <spirit:enumeration>Chip-to-Chip</spirit:enumeration>
      <spirit:enumeration>Add-in_Card</spirit:enumeration>
      <spirit:enumeration>Backplane</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_1e260168</spirit:name>
      <spirit:enumeration>BAR_1:0</spirit:enumeration>
      <spirit:enumeration>BAR_3:2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_1e9fb93b</spirit:name>
      <spirit:enumeration>X1</spirit:enumeration>
      <spirit:enumeration>X2</spirit:enumeration>
      <spirit:enumeration>X4</spirit:enumeration>
      <spirit:enumeration>X8</spirit:enumeration>
      <spirit:enumeration>X16</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_24b724fb</spirit:name>
      <spirit:enumeration>Basic</spirit:enumeration>
      <spirit:enumeration>Advanced</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_35d06715</spirit:name>
      <spirit:enumeration>2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_391945e8</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>12</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
      <spirit:enumeration>20</spirit:enumeration>
      <spirit:enumeration>24</spirit:enumeration>
      <spirit:enumeration>28</spirit:enumeration>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>36</spirit:enumeration>
      <spirit:enumeration>40</spirit:enumeration>
      <spirit:enumeration>44</spirit:enumeration>
      <spirit:enumeration>48</spirit:enumeration>
      <spirit:enumeration>52</spirit:enumeration>
      <spirit:enumeration>56</spirit:enumeration>
      <spirit:enumeration>60</spirit:enumeration>
      <spirit:enumeration>64</spirit:enumeration>
      <spirit:enumeration>68</spirit:enumeration>
      <spirit:enumeration>72</spirit:enumeration>
      <spirit:enumeration>76</spirit:enumeration>
      <spirit:enumeration>80</spirit:enumeration>
      <spirit:enumeration>84</spirit:enumeration>
      <spirit:enumeration>88</spirit:enumeration>
      <spirit:enumeration>92</spirit:enumeration>
      <spirit:enumeration>96</spirit:enumeration>
      <spirit:enumeration>100</spirit:enumeration>
      <spirit:enumeration>104</spirit:enumeration>
      <spirit:enumeration>108</spirit:enumeration>
      <spirit:enumeration>112</spirit:enumeration>
      <spirit:enumeration>116</spirit:enumeration>
      <spirit:enumeration>120</spirit:enumeration>
      <spirit:enumeration>124</spirit:enumeration>
      <spirit:enumeration>128</spirit:enumeration>
      <spirit:enumeration>132</spirit:enumeration>
      <spirit:enumeration>136</spirit:enumeration>
      <spirit:enumeration>140</spirit:enumeration>
      <spirit:enumeration>144</spirit:enumeration>
      <spirit:enumeration>148</spirit:enumeration>
      <spirit:enumeration>152</spirit:enumeration>
      <spirit:enumeration>156</spirit:enumeration>
      <spirit:enumeration>160</spirit:enumeration>
      <spirit:enumeration>164</spirit:enumeration>
      <spirit:enumeration>168</spirit:enumeration>
      <spirit:enumeration>172</spirit:enumeration>
      <spirit:enumeration>176</spirit:enumeration>
      <spirit:enumeration>180</spirit:enumeration>
      <spirit:enumeration>184</spirit:enumeration>
      <spirit:enumeration>188</spirit:enumeration>
      <spirit:enumeration>192</spirit:enumeration>
      <spirit:enumeration>196</spirit:enumeration>
      <spirit:enumeration>200</spirit:enumeration>
      <spirit:enumeration>204</spirit:enumeration>
      <spirit:enumeration>208</spirit:enumeration>
      <spirit:enumeration>212</spirit:enumeration>
      <spirit:enumeration>216</spirit:enumeration>
      <spirit:enumeration>220</spirit:enumeration>
      <spirit:enumeration>224</spirit:enumeration>
      <spirit:enumeration>228</spirit:enumeration>
      <spirit:enumeration>232</spirit:enumeration>
      <spirit:enumeration>236</spirit:enumeration>
      <spirit:enumeration>240</spirit:enumeration>
      <spirit:enumeration>244</spirit:enumeration>
      <spirit:enumeration>248</spirit:enumeration>
      <spirit:enumeration>252</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_3c2e0592</spirit:name>
      <spirit:enumeration>QPLL1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_504db607</spirit:name>
      <spirit:enumeration>GTY_Quad_228</spirit:enumeration>
      <spirit:enumeration>GTY_Quad_227</spirit:enumeration>
      <spirit:enumeration>GTY_Quad_226</spirit:enumeration>
      <spirit:enumeration>GTY_Quad_225</spirit:enumeration>
      <spirit:enumeration>GTY_Quad_224</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_52d29139</spirit:name>
      <spirit:enumeration>Bytes</spirit:enumeration>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
      <spirit:enumeration>Megabytes</spirit:enumeration>
      <spirit:enumeration>Gigabytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_574f38f3</spirit:name>
      <spirit:enumeration>2.5_GT/s</spirit:enumeration>
      <spirit:enumeration>5.0_GT/s</spirit:enumeration>
      <spirit:enumeration>8.0_GT/s</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_589df8e9</spirit:name>
      <spirit:enumeration>RAM</spirit:enumeration>
      <spirit:enumeration>Other_memory_controller</spirit:enumeration>
      <spirit:enumeration>Flash</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_5e2921cd</spirit:name>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_5e45706a</spirit:name>
      <spirit:enumeration>1_vector</spirit:enumeration>
      <spirit:enumeration>2_vectors</spirit:enumeration>
      <spirit:enumeration>4_vectors</spirit:enumeration>
      <spirit:enumeration>8_vectors</spirit:enumeration>
      <spirit:enumeration>16_vectors</spirit:enumeration>
      <spirit:enumeration>32_vectors</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_6b979ebc</spirit:name>
      <spirit:enumeration>250</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_6eff49bd</spirit:name>
      <spirit:enumeration>ACTIVE_LOW</spirit:enumeration>
      <spirit:enumeration>ACTIVE_HIGH</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_75aee2a8</spirit:name>
      <spirit:enumeration>X8G3</spirit:enumeration>
      <spirit:enumeration>X16G3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7a7dde49</spirit:name>
      <spirit:enumeration>true</spirit:enumeration>
      <spirit:enumeration>false</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7d45a81a</spirit:name>
      <spirit:enumeration>128_bytes</spirit:enumeration>
      <spirit:enumeration>256_bytes</spirit:enumeration>
      <spirit:enumeration>512_bytes</spirit:enumeration>
      <spirit:enumeration>1024_bytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7e1e2923</spirit:name>
      <spirit:enumeration>512_bit</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_81a1639d</spirit:name>
      <spirit:enumeration>DWORD_Aligned</spirit:enumeration>
      <spirit:enumeration>Address_Aligned</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_86c5d341</spirit:name>
      <spirit:enumeration>500</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_993a8980</spirit:name>
      <spirit:enumeration>Wireless_controller</spirit:enumeration>
      <spirit:enumeration>Satellite_communication_controllers</spirit:enumeration>
      <spirit:enumeration>Data_acquisition_and_signal_processing_controllers</spirit:enumeration>
      <spirit:enumeration>Intelligent_I/O_controllers</spirit:enumeration>
      <spirit:enumeration>Docking_stations</spirit:enumeration>
      <spirit:enumeration>Device_was_built_before_Class_Code_definitions_were_finalized</spirit:enumeration>
      <spirit:enumeration>Memory_controller</spirit:enumeration>
      <spirit:enumeration>Simple_communication_controllers</spirit:enumeration>
      <spirit:enumeration>Serial_bus_controllers</spirit:enumeration>
      <spirit:enumeration>Encryption/Decryption_controllers</spirit:enumeration>
      <spirit:enumeration>Display_controller</spirit:enumeration>
      <spirit:enumeration>Multimedia_device</spirit:enumeration>
      <spirit:enumeration>Input_devices</spirit:enumeration>
      <spirit:enumeration>Mass_storage_controller</spirit:enumeration>
      <spirit:enumeration>Processors</spirit:enumeration>
      <spirit:enumeration>Device_does_not_fit_in_any_defined_classes</spirit:enumeration>
      <spirit:enumeration>Bridge_device</spirit:enumeration>
      <spirit:enumeration>Network_controller</spirit:enumeration>
      <spirit:enumeration>Base_system_peripherals</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_a8dbd818</spirit:name>
      <spirit:enumeration>X0Y1</spirit:enumeration>
      <spirit:enumeration>X0Y3</spirit:enumeration>
      <spirit:enumeration>X1Y2</spirit:enumeration>
      <spirit:enumeration>X1Y4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_aa031417</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_bea500ca</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>MSI-X_External</spirit:enumeration>
      <spirit:enumeration>MSI-X_Internal</spirit:enumeration>
      <spirit:enumeration>MSI-X_AXI4-Stream</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_bf0bb0b0</spirit:name>
      <spirit:enumeration>BAR_0</spirit:enumeration>
      <spirit:enumeration>BAR_2</spirit:enumeration>
      <spirit:enumeration>BAR_4</spirit:enumeration>
      <spirit:enumeration>BAR_5</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c15e8c67</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>64</spirit:enumeration>
      <spirit:enumeration>128</spirit:enumeration>
      <spirit:enumeration>256</spirit:enumeration>
      <spirit:enumeration>512</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c3d223d9</spirit:name>
      <spirit:enumeration>Memory</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ca005b72</spirit:name>
      <spirit:enumeration>No_ASPM</spirit:enumeration>
      <spirit:enumeration>L1_Supported</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d123c74c</spirit:name>
      <spirit:enumeration>Bytes</spirit:enumeration>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
      <spirit:enumeration>Megabytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d53faa96</spirit:name>
      <spirit:enumeration>100_MHz</spirit:enumeration>
      <spirit:enumeration>125_MHz</spirit:enumeration>
      <spirit:enumeration>250_MHz</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d85ad257</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_e65c4ca5</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>VCU1262</spirit:enumeration>
      <spirit:enumeration>VCU117</spirit:enumeration>
      <spirit:enumeration>ZCU117</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ea588113</spirit:name>
      <spirit:enumeration>Bytes</spirit:enumeration>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
      <spirit:enumeration>Megabytes</spirit:enumeration>
      <spirit:enumeration>Gigabytes</spirit:enumeration>
      <spirit:enumeration>Terabytes</spirit:enumeration>
      <spirit:enumeration>Petabytes</spirit:enumeration>
      <spirit:enumeration>Exabytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ec16305d</spirit:name>
      <spirit:enumeration>BAR_1:0</spirit:enumeration>
      <spirit:enumeration>BAR_3:2</spirit:enumeration>
      <spirit:enumeration>BAR_5:4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ec64e624</spirit:name>
      <spirit:enumeration>N/A</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f1174048</spirit:name>
      <spirit:enumeration>NONE</spirit:enumeration>
      <spirit:enumeration>INTA</spirit:enumeration>
      <spirit:enumeration>INTB</spirit:enumeration>
      <spirit:enumeration>INTC</spirit:enumeration>
      <spirit:enumeration>INTD</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f149a468</spirit:name>
      <spirit:enumeration>Extreme</spirit:enumeration>
      <spirit:enumeration>Good</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_3c87fcdb</spirit:name>
      <spirit:enumeration spirit:text="Include GT Wizard in core">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Include GT Wizard in example design">0</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_53749dec</spirit:name>
      <spirit:enumeration spirit:text="Include Shared Logic in core">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Include Shared Logic in example design">0</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_c689c777</spirit:name>
      <spirit:enumeration spirit:text="Include GT COMMON inside GT Wizard">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Include GT COMMON in example design">0</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_elaboratesubcores_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>ip_0/xdma_0_pcie4_ip_gt.xci</spirit:name>
        <spirit:userFileType>xci</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>ip_0/xdma_0_pcie4_ip_gt.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/xdma_0_pcie4_ip_ooc.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ip_pcie4_uscale_plus_x1y2.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gtwizard_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_ff_chain.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_pipeline.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_async_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cc_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cc_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cq_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cq_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_intfc_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rc_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rc_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rq_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rq_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_sync_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_16k_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_16k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_32k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_4k_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_msix.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_rep_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_rep.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_tph.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_gt_channel.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_gt_common.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_clk.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_rst.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_rxeq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_txeq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sync_cell.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sync.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_cdr_ctrl_on_eidle.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_receiver_detect_rxterm.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_init_ctrl.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pl_eq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_vf_decode.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pipe.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>xdma_0_pcie4_ip_pipe</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/gen4_phy_defines.vh</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_seqnum_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sys_clk_gen_ps.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pcie4_uscale_core_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>xdma_0_pcie4_ip_pcie4_uscale_core_top</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesiswrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/xdma_0_pcie4_ip.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogbehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gtwizard_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_ff_chain.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_pipeline.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_async_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cc_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cc_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cq_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_cq_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_intfc_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rc_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rc_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rq_intfc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_rq_output_mux.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_512b_sync_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_16k_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_16k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_32k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_4k_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_msix.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_rep_int.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_rep.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram_tph.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_bram.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_gt_channel.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_gt_common.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_clk.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_rst.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_rxeq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_txeq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sync_cell.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sync.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_cdr_ctrl_on_eidle.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_receiver_detect_rxterm.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_gt_phy_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_init_ctrl.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pl_eq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_vf_decode.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pipe.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>xdma_0_pcie4_ip_pipe</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/gen4_phy_defines.vh</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_phy_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_seqnum_fifo.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_sys_clk_gen_ps.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/xdma_0_pcie4_ip_pcie4_uscale_core_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>xdma_0_pcie4_ip_pcie4_uscale_core_top</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsimulationwrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>sim/xdma_0_pcie4_ip.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>The Xilinx UltraScale+ PCI Express Integrated Block (1-lane, 2-lane, 4-lane, 8-lane and 16-lane) in conjunction with flexible Ultra series architectural features such as integrated GTs (Gigabit Transceivers) and BRAM (Block RAMs) are used to implement a PCI Express Base Specification v3.1 compliant PCI Express Endpoint.</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>device_port_type</spirit:name>
      <spirit:displayName>Device Port Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.device_port_type" spirit:choiceRef="choice_list_002f5e3f" spirit:order="2">PCI_Express_Endpoint_device</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>xlnx_ref_board</spirit:name>
      <spirit:displayName>Xlnx Ref Board</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.xlnx_ref_board" spirit:choiceRef="choice_list_e65c4ca5" spirit:order="3">None</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.xlnx_ref_board">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PL_LINK_CAP_MAX_LINK_SPEED</spirit:name>
      <spirit:displayName>Pl Link Cap Max Link Speed</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED" spirit:choiceRef="choice_list_574f38f3" spirit:order="13">8.0_GT/s</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PL_LINK_CAP_MAX_LINK_WIDTH</spirit:name>
      <spirit:displayName>Pl Link Cap Max Link Width</spirit:displayName>
      <spirit:description>The Xilinx Ultrascale Series Gen3 Integrated Block for PCI Expressification v3.0 compliant PCI Express Endpoint.</spirit:description>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH" spirit:choiceRef="choice_list_1e9fb93b" spirit:order="12">X16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>REF_CLK_FREQ</spirit:name>
      <spirit:displayName>Ref Clk Freq</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.REF_CLK_FREQ" spirit:choiceRef="choice_list_d53faa96" spirit:order="9">100_MHz</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_EXT_512_CQ_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_EXT_512_CQ_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="289">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.AXISTEN_IF_EXT_512_CQ_STRADDLE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_EXT_512_CC_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_EXT_512_CC_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="290">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_EXT_512_RQ_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_EXT_512_RQ_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="291">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_EXT_512_RC_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_EXT_512_RC_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="16">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_EXT_512_RC_4TLP_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If 512 4TLP/2TLP Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_EXT_512_RC_4TLP_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="291.1">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_RC_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_RC_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="302">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.AXISTEN_IF_RC_STRADDLE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_enable_client_tag</spirit:name>
      <spirit:displayName>Enable Client Tag</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_enable_client_tag" spirit:choiceRef="choice_list_7a7dde49" spirit:order="15.5">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE</spirit:name>
      <spirit:displayName>Pf0 Aer Cap Ecrc Gen and Check Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="273">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf0 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_CLASS_CODE" spirit:order="34.03">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf0 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEVICE_ID" spirit:order="25">1042</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 128b Cas Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="262">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 32b Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="260">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 64b Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="261">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 Tph Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="263">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE</spirit:name>
      <spirit:displayName>Pf0 Dev Cap Function Level Reset Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="23">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf0 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="167">NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_LINK_STATUS_SLOT_CLOCK_CONFIG</spirit:name>
      <spirit:displayName>Pf0 Link Status Slot Clock Config</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG" spirit:choiceRef="choice_list_7a7dde49" spirit:order="10">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_list_ec16305d" spirit:order="219">BAR_3:2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" spirit:order="218">00008FE0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_list_ec16305d" spirit:order="217">BAR_3:2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" spirit:order="216">00008000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" spirit:order="215">020</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf0 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_list_5e45706a" spirit:order="205">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D1</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D1" spirit:choiceRef="choice_list_7a7dde49" spirit:order="258">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D3HOT</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D3hot</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D3HOT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="259">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_SUPP_D1_STATE</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Supp D1 State</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_SUPP_D1_STATE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="256">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_REVISION_ID</spirit:name>
      <spirit:displayName>Pf0 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_REVISION_ID" spirit:order="26">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf0 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_391945e8" spirit:order="121">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF0_SRIOV_CAP_INITIAL_VF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_FIRST_VF_OFFSET" spirit:order="123">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf0 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_FUNC_DEP_LINK" spirit:order="122">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf0 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="125">00000553</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF0_SRIOV_SUPPORTED_PAGE_SIZE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf0 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_VF_DEVICE_ID" spirit:order="124">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf0 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SUBSYSTEM_ID" spirit:order="28">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf1 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_CLASS_CODE" spirit:order="43.03">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf1 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_DEVICE_ID" spirit:order="303">1041</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf1 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="203">NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_list_1e260168" spirit:order="225">BAR_1:0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_list_1e260168" spirit:order="223">BAR_1:0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_SIZE" spirit:order="221">001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_OFFSET" spirit:order="222">00000040</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_PBA_OFFSET" spirit:order="224">00000050</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf1 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_list_5e45706a" spirit:order="207">1_vector</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF1_MSI_CAP_MULTIMSGCAP">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_REVISION_ID</spirit:name>
      <spirit:displayName>Pf1 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_REVISION_ID" spirit:order="36">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf1 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_d85ad257" spirit:order="123.1">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF1_SRIOV_CAP_INITIAL_VF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_CAP_VER</spirit:name>
      <spirit:displayName>Pf1 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_CAP_VER" spirit:order="126">0001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_FIRST_VF_OFFSET" spirit:order="123.11">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF1_SRIOV_FIRST_VF_OFFSET">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf1 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_FUNC_DEP_LINK" spirit:order="128">0001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf1 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="131">00000553</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF1_SRIOV_SUPPORTED_PAGE_SIZE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf1 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_VF_DEVICE_ID" spirit:order="130">0000</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF1_SRIOV_VF_DEVICE_ID">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf1 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SUBSYSTEM_ID" spirit:order="37">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf2 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_CLASS_CODE" spirit:order="43.23">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf2 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_DEVICE_ID" spirit:order="25.2">1040</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf2 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="167.2">NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf2 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_list_1e260168" spirit:order="219.2">BAR_1:0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf2 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_list_1e260168" spirit:order="217.2">BAR_1:0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf2 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSIX_CAP_TABLE_SIZE" spirit:order="220.2">001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf2 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSIX_CAP_TABLE_OFFSET" spirit:order="216.2">00000040</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf2 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSIX_CAP_PBA_OFFSET" spirit:order="224.2">00000050</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf2 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_list_5e45706a" spirit:order="205.2">1_vector</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_MSI_CAP_MULTIMSGCAP">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_REVISION_ID</spirit:name>
      <spirit:displayName>Pf2 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_REVISION_ID" spirit:order="26.2">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf2 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_d85ad257" spirit:order="121.2">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_CAP_INITIAL_VF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_CAP_VER</spirit:name>
      <spirit:displayName>Pf2 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_CAP_VER" spirit:order="126.2">0001</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_CAP_VER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf2 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_FIRST_VF_OFFSET" spirit:order="123.2">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_FIRST_VF_OFFSET">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf2 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_FUNC_DEP_LINK" spirit:order="122.2">0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_FUNC_DEP_LINK">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf2 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="125.2">00000553</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_SUPPORTED_PAGE_SIZE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf2 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SRIOV_VF_DEVICE_ID" spirit:order="124.2">0000</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF2_SRIOV_VF_DEVICE_ID">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf2 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SUBSYSTEM_ID" spirit:order="28.2">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf3 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_CLASS_CODE" spirit:order="43.33">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf3 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_DEVICE_ID" spirit:order="25.3">1039</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf3 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="167.3">NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf3 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_list_bf0bb0b0" spirit:order="219.3">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf3 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_list_bf0bb0b0" spirit:order="217.3">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf3 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSIX_CAP_TABLE_SIZE" spirit:order="220.3">001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf3 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSIX_CAP_TABLE_OFFSET" spirit:order="216.3">00000040</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf3 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSIX_CAP_PBA_OFFSET" spirit:order="218.3">00000050</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf3 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_list_5e45706a" spirit:order="205.3">1_vector</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_MSI_CAP_MULTIMSGCAP">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_REVISION_ID</spirit:name>
      <spirit:displayName>Pf3 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_REVISION_ID" spirit:order="26.3">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf3 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_d85ad257" spirit:order="121.3">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_CAP_INITIAL_VF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_CAP_VER</spirit:name>
      <spirit:displayName>Pf3 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_CAP_VER" spirit:order="126.3">0001</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_CAP_VER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf3 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_FIRST_VF_OFFSET" spirit:order="123.3">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_FIRST_VF_OFFSET">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf3 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_FUNC_DEP_LINK" spirit:order="122.3">0003</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_FUNC_DEP_LINK">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf3 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="125.3">00000553</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_SUPPORTED_PAGE_SIZE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf3 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SRIOV_VF_DEVICE_ID" spirit:order="124.3">0000</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PF3_SRIOV_VF_DEVICE_ID">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf3 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SUBSYSTEM_ID" spirit:order="28.3">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TL_PF_ENABLE_REG</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TL_PF_ENABLE_REG" spirit:choiceRef="choice_list_aa031417" spirit:order="20">4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SRIOV_CAP_ENABLE</spirit:name>
      <spirit:displayName>Sriov Cap Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SRIOV_CAP_ENABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="22">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">xdma_0_pcie4_ip</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="28.5">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="37.5">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="37.6">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="37.7">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D0</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="257">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SUBSYSTEM_VENDOR_ID</spirit:name>
      <spirit:displayName>Pf0 Subsystem Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" spirit:order="27">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SUBSYSTEM_VENDOR_ID</spirit:name>
      <spirit:displayName>Pf1 Subsystem Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SUBSYSTEM_VENDOR_ID" spirit:order="27.103">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF2_SUBSYSTEM_VENDOR_ID</spirit:name>
      <spirit:displayName>Pf2 Subsystem Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF2_SUBSYSTEM_VENDOR_ID" spirit:order="27.2">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF3_SUBSYSTEM_VENDOR_ID</spirit:name>
      <spirit:displayName>Pf3 Subsystem Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF3_SUBSYSTEM_VENDOR_ID" spirit:order="27.3">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="201">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar5_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="201.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar5_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="201.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_sub</spirit:name>
      <spirit:displayName>Pf0 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_sub" spirit:order="34.01">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="193">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="193.2">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="193.3">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_vc_cap_enabled</spirit:name>
      <spirit:displayName>Pf0 Vc Cap Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_vc_cap_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="268">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="199">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="199.2">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="199.3">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="168">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="168.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="168.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="162">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="198.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="198.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pcie_blk_locn</spirit:name>
      <spirit:displayName>Pcie Blk Locn</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pcie_blk_locn" spirit:choiceRef="choice_list_a8dbd818" spirit:order="4">X1Y2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="140">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_base</spirit:name>
      <spirit:displayName>Pf1 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_base" spirit:order="42.1">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_class_code_base</spirit:name>
      <spirit:displayName>Pf2 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_class_code_base" spirit:order="42.21">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_class_code_base</spirit:name>
      <spirit:displayName>Pf3 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_class_code_base" spirit:order="42.31">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="189">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="189.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="189.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="170">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="170.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="170.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_type</spirit:name>
      <spirit:displayName>Pf1 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="101">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar3_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_type</spirit:name>
      <spirit:displayName>Pf2 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="101.2">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar3_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_type</spirit:name>
      <spirit:displayName>Pf3 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="101.3">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar3_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="94.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="94.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="94">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_type</spirit:name>
      <spirit:displayName>Pf1 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="95">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="96">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="97">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_scale</spirit:name>
      <spirit:displayName>Pf1 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="98">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_size</spirit:name>
      <spirit:displayName>Pf1 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="99">16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_interface</spirit:name>
      <spirit:displayName>Pf0 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_interface" spirit:order="34.02">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="142">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_type</spirit:name>
      <spirit:displayName>Pf1 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="107">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar4_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_type</spirit:name>
      <spirit:displayName>Pf2 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="95.2">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_64bit</spirit:name>
      <spirit:displayName>Pf2 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="96.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="97.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_scale</spirit:name>
      <spirit:displayName>Pf2 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="98.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar2_size</spirit:name>
      <spirit:displayName>Pf2 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="99.2">4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_type</spirit:name>
      <spirit:displayName>Pf2 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="107.2">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar4_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_type</spirit:name>
      <spirit:displayName>Pf3 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="95.3">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_64bit</spirit:name>
      <spirit:displayName>Pf3 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="96.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="97.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar2_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_scale</spirit:name>
      <spirit:displayName>Pf3 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="98.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar2_size</spirit:name>
      <spirit:displayName>Pf3 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="99.3">128</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_type</spirit:name>
      <spirit:displayName>Pf3 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="107.3">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_base_class_menu</spirit:name>
      <spirit:displayName>Pf0 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_base_class_menu" spirit:choiceRef="choice_list_993a8980" spirit:order="33">Memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf0 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sub_class_interface_menu" spirit:choiceRef="choice_list_589df8e9" spirit:order="34">Other_memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="172">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="117">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="132">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="171">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_type</spirit:name>
      <spirit:displayName>Pf1 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="113">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar5_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="164">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="174">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_interface</spirit:name>
      <spirit:displayName>Pf1 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_interface" spirit:order="43.02">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="146">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_msix_enabled</spirit:name>
      <spirit:displayName>Pf1 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="220">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="114">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar5_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="176">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="102">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="147">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="100">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar3_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="148">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="178">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_scale</spirit:name>
      <spirit:displayName>Pf1 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="104">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar3_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="138">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_RQ_ALIGNMENT_MODE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_RQ_ALIGNMENT_MODE" spirit:choiceRef="choice_list_81a1639d" spirit:order="15">DWORD_Aligned</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_CQ_ALIGNMENT_MODE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_CQ_ALIGNMENT_MODE" spirit:choiceRef="choice_list_81a1639d" spirit:order="16">Address_Aligned</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>alignment_mode_256b</spirit:name>
      <spirit:displayName>Alignment Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.alignment_mode_256b" spirit:choiceRef="choice_list_81a1639d" spirit:order="299">DWORD_Aligned</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="195">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="180">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="152">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="137">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="182">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="108">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="143">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="44">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_type</spirit:name>
      <spirit:displayName>Pf0 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="45">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="46">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="47">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_scale</spirit:name>
      <spirit:displayName>Pf0 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="48">Megabytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_size</spirit:name>
      <spirit:displayName>Pf0 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="49">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="50">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar1_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_type</spirit:name>
      <spirit:displayName>Pf0 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="51">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar1_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="52">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="53">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar1_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_scale</spirit:name>
      <spirit:displayName>Pf0 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="54">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar1_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_size</spirit:name>
      <spirit:displayName>Pf0 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="55">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar1_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="56">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_type</spirit:name>
      <spirit:displayName>Pf0 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="57">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="58">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="59">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_scale</spirit:name>
      <spirit:displayName>Pf0 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="60">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_size</spirit:name>
      <spirit:displayName>Pf0 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="61">64</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="62">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar3_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_type</spirit:name>
      <spirit:displayName>Pf0 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="63">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar3_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="64">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="65">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar3_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_scale</spirit:name>
      <spirit:displayName>Pf0 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="66">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar3_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_size</spirit:name>
      <spirit:displayName>Pf0 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="67">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar3_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="68">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_type</spirit:name>
      <spirit:displayName>Pf0 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="69">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="70">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="71">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_scale</spirit:name>
      <spirit:displayName>Pf0 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="72">Megabytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_size</spirit:name>
      <spirit:displayName>Pf0 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="73">128</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="74">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar5_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_type</spirit:name>
      <spirit:displayName>Pf0 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="75">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar5_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="76">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar5_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_scale</spirit:name>
      <spirit:displayName>Pf0 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="77">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar5_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_size</spirit:name>
      <spirit:displayName>Pf0 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="78">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_bar5_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="154">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="106">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="177">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="149">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="184">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_scale</spirit:name>
      <spirit:displayName>Pf1 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="110">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar4_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="155">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="144">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_dev_cap_max_payload</spirit:name>
      <spirit:displayName>Pf0 Dev Cap Max Payload</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_dev_cap_max_payload" spirit:choiceRef="choice_list_7d45a81a" spirit:order="19">1024_bytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y0</spirit:name>
      <spirit:displayName>Gen X0y0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="5">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y1</spirit:name>
      <spirit:displayName>Gen X0y1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y1" spirit:choiceRef="choice_list_7a7dde49" spirit:order="6">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y2</spirit:name>
      <spirit:displayName>Gen X0y2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y2" spirit:choiceRef="choice_list_7a7dde49" spirit:order="7">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y2">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y3</spirit:name>
      <spirit:displayName>Gen X0y3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y3" spirit:choiceRef="choice_list_7a7dde49" spirit:order="8">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y4</spirit:name>
      <spirit:displayName>Gen X0y4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y4" spirit:choiceRef="choice_list_7a7dde49" spirit:order="328">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y4">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y5</spirit:name>
      <spirit:displayName>Gen X0y5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y5" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x0y5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y0</spirit:name>
      <spirit:displayName>Gen X1y0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y1</spirit:name>
      <spirit:displayName>Gen X1y1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y1" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y2</spirit:name>
      <spirit:displayName>Gen X1y2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y2" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.4">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y2">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y3</spirit:name>
      <spirit:displayName>Gen X1y3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y3" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.5">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y4</spirit:name>
      <spirit:displayName>Gen X1y4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y4" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.6">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y4">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x1y5</spirit:name>
      <spirit:displayName>Gen X1y5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x1y5" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329.7">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.gen_x1y5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="161">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="118">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_expansion_rom_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="119">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_expansion_rom_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="186">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="158">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="166">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="153">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="188">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="79">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="160">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_base_class_menu</spirit:name>
      <spirit:displayName>Pf1 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_base_class_menu" spirit:choiceRef="choice_list_993a8980" spirit:order="42">Memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf1 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sub_class_interface_menu" spirit:choiceRef="choice_list_589df8e9" spirit:order="43">Other_memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="133">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="112">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="103">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar3_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_size" spirit:choiceRef="choice_list_35d06715" spirit:order="173">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="190">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_scale</spirit:name>
      <spirit:displayName>Pf1 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="115">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar5_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_sub</spirit:name>
      <spirit:displayName>Pf1 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_sub" spirit:order="43.01">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>extended_tag_field</spirit:name>
      <spirit:displayName>Extended Tag Field</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.extended_tag_field" spirit:choiceRef="choice_list_7a7dde49" spirit:order="21">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="139">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="135">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="80">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_expansion_rom_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="81">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf0_expansion_rom_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_size" spirit:choiceRef="choice_list_35d06715" spirit:order="179">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="150">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="200">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="145">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>vendor_id</spirit:name>
      <spirit:displayName>Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.vendor_id" spirit:order="24">1D0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_vendor_id</spirit:name>
      <spirit:displayName>Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_vendor_id" spirit:order="24.1">1D0F</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_vendor_id">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_vendor_id</spirit:name>
      <spirit:displayName>Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_vendor_id" spirit:order="24.2">1D0F</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_vendor_id">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_vendor_id</spirit:name>
      <spirit:displayName>Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_vendor_id" spirit:order="24.3">1D0F</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_vendor_id">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_tphr_enable</spirit:name>
      <spirit:displayName>Pf0 Tphr Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_tphr_enable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="284">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_size" spirit:choiceRef="choice_list_35d06715" spirit:order="185">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="151">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_size" spirit:choiceRef="choice_list_35d06715" spirit:order="191">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="82">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_type</spirit:name>
      <spirit:displayName>Pf1 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="83">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="84">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="85">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_scale</spirit:name>
      <spirit:displayName>Pf1 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="86">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_size</spirit:name>
      <spirit:displayName>Pf1 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="87">16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="88">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar1_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_type</spirit:name>
      <spirit:displayName>Pf1 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="89">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar1_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="90">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="91">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar1_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_scale</spirit:name>
      <spirit:displayName>Pf1 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="92">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar1_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_size</spirit:name>
      <spirit:displayName>Pf1 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="93">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar1_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="192">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="157">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="194">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="183">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_cap_ver</spirit:name>
      <spirit:displayName>Pf0 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_cap_ver" spirit:order="120">0001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_size" spirit:choiceRef="choice_list_35d06715" spirit:order="197">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_msi_enabled</spirit:name>
      <spirit:displayName>Pf1 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="206">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="165">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="163">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ext_pcie_cfg_space_enabled</spirit:name>
      <spirit:displayName>Ext Pcie Cfg Space Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ext_pcie_cfg_space_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="286">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="196">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_size" spirit:choiceRef="choice_list_35d06715" spirit:order="202">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_ari_enabled</spirit:name>
      <spirit:displayName>Pf0 Ari Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_ari_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="277">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>perf_level</spirit:name>
      <spirit:displayName>Perf Level</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.perf_level" spirit:choiceRef="choice_list_f149a468" spirit:order="265">Extreme</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_base</spirit:name>
      <spirit:displayName>Pf0 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_base" spirit:order="33.1">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_width</spirit:name>
      <spirit:displayName>Axisten If Width</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_width" spirit:choiceRef="choice_list_7e1e2923" spirit:order="14">512_bit</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="156">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="169">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_size</spirit:name>
      <spirit:displayName>Pf1 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="105">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar3_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="159">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_aer_enabled</spirit:name>
      <spirit:displayName>Pf0 Aer Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_aer_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="271">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_dsn_enabled</spirit:name>
      <spirit:displayName>Pf0 Dsn Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_dsn_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="266">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="175">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="134">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_size</spirit:name>
      <spirit:displayName>Pf1 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="111">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar4_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_msi_enabled</spirit:name>
      <spirit:displayName>Pf0 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="204">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="198">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="181">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_msix_enabled</spirit:name>
      <spirit:displayName>Pf0 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="214">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_size</spirit:name>
      <spirit:displayName>Pf1 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="116">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar5_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="109">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf1_bar4_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="136">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="141">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="187">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="172.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf2 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="117.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="171.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar5_type</spirit:name>
      <spirit:displayName>Pf2 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="113.2">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar5_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="174.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_class_code_interface</spirit:name>
      <spirit:displayName>Pf2 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_class_code_interface" spirit:order="43.22">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_msix_enabled</spirit:name>
      <spirit:displayName>Pf2 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="215.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="114.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar5_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="176.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_64bit</spirit:name>
      <spirit:displayName>Pf2 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="102.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="100.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar3_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="178.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_scale</spirit:name>
      <spirit:displayName>Pf2 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="104.2">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar3_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="195.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="180.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="182.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_64bit</spirit:name>
      <spirit:displayName>Pf2 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="108.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="106.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="177.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="184.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_scale</spirit:name>
      <spirit:displayName>Pf2 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="110.2">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar4_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf2 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="118.2">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_expansion_rom_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf2 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="119.2">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_expansion_rom_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="186.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="188.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_base_class_menu</spirit:name>
      <spirit:displayName>Pf2 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_base_class_menu" spirit:choiceRef="choice_list_993a8980" spirit:order="42.2">Memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf2 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sub_class_interface_menu" spirit:choiceRef="choice_list_589df8e9" spirit:order="43.2">Other_memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar5_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="112.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="103.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar3_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_size" spirit:choiceRef="choice_list_35d06715" spirit:order="173.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="190.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar5_scale</spirit:name>
      <spirit:displayName>Pf2 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="115.2">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar5_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_class_code_sub</spirit:name>
      <spirit:displayName>Pf2 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_class_code_sub" spirit:order="43.21">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_size" spirit:choiceRef="choice_list_35d06715" spirit:order="179.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="200.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_size" spirit:choiceRef="choice_list_35d06715" spirit:order="185.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_size" spirit:choiceRef="choice_list_35d06715" spirit:order="191.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="82.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_type</spirit:name>
      <spirit:displayName>Pf2 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="83.2">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_64bit</spirit:name>
      <spirit:displayName>Pf2 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="84.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="85.2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_scale</spirit:name>
      <spirit:displayName>Pf2 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_scale" spirit:choiceRef="choice_list_ea588113" spirit:order="86.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar0_size</spirit:name>
      <spirit:displayName>Pf2 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="87.2">64</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_enabled</spirit:name>
      <spirit:displayName>Pf2 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="88.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar1_enabled">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_type</spirit:name>
      <spirit:displayName>Pf2 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="89.2">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar1_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_64bit</spirit:name>
      <spirit:displayName>Pf2 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="90.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="91.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar1_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_scale</spirit:name>
      <spirit:displayName>Pf2 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="92.2">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar1_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar1_size</spirit:name>
      <spirit:displayName>Pf2 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="93.2">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar1_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="192.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="194.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="183.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_size" spirit:choiceRef="choice_list_35d06715" spirit:order="197.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_msi_enabled</spirit:name>
      <spirit:displayName>Pf2 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="206.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar4_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="196.2">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar5_size" spirit:choiceRef="choice_list_35d06715" spirit:order="202.2">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="169.2">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar3_size</spirit:name>
      <spirit:displayName>Pf2 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="105.2">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar3_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="175.2">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_size</spirit:name>
      <spirit:displayName>Pf2 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="111.2">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar4_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="181.2">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar5_size</spirit:name>
      <spirit:displayName>Pf2 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="116.2">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar5_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf2 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="109.2">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf2_bar4_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf2_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf2 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf2_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="187.2">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="172.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf3 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="117.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="171.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar5_type</spirit:name>
      <spirit:displayName>Pf3 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar5_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="113.3">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="174.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_class_code_interface</spirit:name>
      <spirit:displayName>Pf3 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_class_code_interface" spirit:order="43.32">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_msix_enabled</spirit:name>
      <spirit:displayName>Pf3 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="215.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="114.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar5_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="176.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_64bit</spirit:name>
      <spirit:displayName>Pf3 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="102.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="100.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="178.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_scale</spirit:name>
      <spirit:displayName>Pf3 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="104.3">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar3_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="195.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="180.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="182.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_64bit</spirit:name>
      <spirit:displayName>Pf3 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="108.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="106.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="177.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="184.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_scale</spirit:name>
      <spirit:displayName>Pf3 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="110.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf3 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="118.3">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_expansion_rom_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf3 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="119.3">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_expansion_rom_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="186.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="188.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_base_class_menu</spirit:name>
      <spirit:displayName>Pf3 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_base_class_menu" spirit:choiceRef="choice_list_993a8980" spirit:order="42.3">Memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf3 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sub_class_interface_menu" spirit:choiceRef="choice_list_589df8e9" spirit:order="43.3">Other_memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar5_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="112.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="103.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar3_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_size" spirit:choiceRef="choice_list_35d06715" spirit:order="173.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="190.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar5_scale</spirit:name>
      <spirit:displayName>Pf3 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="115.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_class_code_sub</spirit:name>
      <spirit:displayName>Pf3 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_class_code_sub" spirit:order="43.31">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_size" spirit:choiceRef="choice_list_35d06715" spirit:order="179.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="200.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_size" spirit:choiceRef="choice_list_35d06715" spirit:order="185.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_size" spirit:choiceRef="choice_list_35d06715" spirit:order="191.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="82.3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_type</spirit:name>
      <spirit:displayName>Pf3 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="83.3">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_64bit</spirit:name>
      <spirit:displayName>Pf3 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="84.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="85.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar0_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_scale</spirit:name>
      <spirit:displayName>Pf3 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="86.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar0_size</spirit:name>
      <spirit:displayName>Pf3 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="87.3">128</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_enabled</spirit:name>
      <spirit:displayName>Pf3 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="88.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_type</spirit:name>
      <spirit:displayName>Pf3 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="89.3">N/A</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar1_type">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_64bit</spirit:name>
      <spirit:displayName>Pf3 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="90.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="91.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar1_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_scale</spirit:name>
      <spirit:displayName>Pf3 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="92.3">Kilobytes</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar1_scale">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar1_size</spirit:name>
      <spirit:displayName>Pf3 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="93.3">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar1_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="192.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="194.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="183.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_size" spirit:choiceRef="choice_list_35d06715" spirit:order="197.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_msi_enabled</spirit:name>
      <spirit:displayName>Pf3 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="206.3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar4_scale" spirit:choiceRef="choice_list_5e2921cd" spirit:order="196.3">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar5_size" spirit:choiceRef="choice_list_35d06715" spirit:order="202.3">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="169.3">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar3_size</spirit:name>
      <spirit:displayName>Pf3 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="105.3">128</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar3_size">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="175.3">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_size</spirit:name>
      <spirit:displayName>Pf3 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="111.3">128</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="181.3">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar5_size</spirit:name>
      <spirit:displayName>Pf3 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="116.3">128</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf3 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="109.3">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.pf3_bar4_prefetchable">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf3_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf3 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf3_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="187.3">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>mode_selection</spirit:name>
      <spirit:displayName>Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.mode_selection" spirit:choiceRef="choice_list_24b724fb" spirit:order="22.2">Advanced</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pipe_sim</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.pipe_sim" spirit:order="294">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_clk</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_clk" spirit:order="295">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_msi_per_vec_masking</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_msi_per_vec_masking" spirit:order="296">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>coreclk_freq</spirit:name>
      <spirit:displayName>CORE CLOCK FREQ</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.coreclk_freq" spirit:choiceRef="choice_list_86c5d341" spirit:order="333">500</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.coreclk_freq">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>plltype</spirit:name>
      <spirit:displayName>PLL TYPE</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.plltype" spirit:choiceRef="choice_list_3c2e0592" spirit:order="334">QPLL1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.plltype">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_freq</spirit:name>
      <spirit:displayName>AXISTEN IF FREQ</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_freq" spirit:choiceRef="choice_list_6b979ebc" spirit:order="297">250</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>aspm_support</spirit:name>
      <spirit:displayName>ASPM Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.aspm_support" spirit:choiceRef="choice_list_ca005b72" spirit:order="298">No_ASPM</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SRIOV_CAP_ENABLE_EXT</spirit:name>
      <spirit:displayName>SRIOV Cap Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SRIOV_CAP_ENABLE_EXT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="287">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_fc_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_fc_if" spirit:order="303">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_ext_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_ext_if" spirit:order="304">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_status_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_status_if" spirit:order="305">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>per_func_status_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.per_func_status_if" spirit:order="306">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_mgmt_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_mgmt_if" spirit:order="307">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>rcv_msg_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.rcv_msg_if" spirit:order="308">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_tx_msg_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_tx_msg_if" spirit:order="309">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_ctl_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_ctl_if" spirit:order="310">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tx_fc_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.tx_fc_if" spirit:order="311">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_pcie_drp</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_pcie_drp" spirit:order="314">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_parity</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.en_parity" spirit:choiceRef="choice_list_7a7dde49" spirit:order="300">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_pl_ifc</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_pl_ifc" spirit:order="318">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_pcie_conf</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_pcie_conf" spirit:order="322">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>dis_gt_wizard</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.dis_gt_wizard" spirit:order="323">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>bmd_pio_mode</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.bmd_pio_mode" spirit:order="12.9">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>sriov_exd_mode</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.sriov_exd_mode" spirit:order="12.8">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>dbg_checker</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.dbg_checker" spirit:order="13.1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>enable_ibert</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.enable_ibert" spirit:order="13.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>two_port_switch</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.two_port_switch" spirit:order="323.2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>two_port_config</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.two_port_config" spirit:choiceRef="choice_list_75aee2a8" spirit:order="323.3">X8G3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_PPM_OFFSET</spirit:name>
      <spirit:description>Specify the PPM offset between received data and transmitted data</spirit:description>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RX_PPM_OFFSET" spirit:order="323.7" spirit:minimum="0" spirit:maximum="600" spirit:rangeType="long">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_SSC_PPM</spirit:name>
      <spirit:description>Specify the spread spectrum clocking modulation in PPM</spirit:description>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RX_SSC_PPM" spirit:order="323.8" spirit:minimum="0" spirit:maximum="5000" spirit:rangeType="long">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INS_LOSS_NYQ</spirit:name>
      <spirit:description>Indicate the transmitter to receiver insertion loss at the Nyquist frequency, in dB</spirit:description>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.INS_LOSS_NYQ" spirit:order="323.9" spirit:minimum="0">5</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ins_loss_profile</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ins_loss_profile" spirit:choiceRef="choice_list_0f93492c" spirit:order="323.6" spirit:configGroups="1 UnGrouped">Chip-to-Chip</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.ins_loss_profile">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>enable_gen4</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.enable_gen4" spirit:order="12.1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_transceiver_status_ports</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_transceiver_status_ports" spirit:order="324">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.en_transceiver_status_ports">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Shared_Logic</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Shared_Logic" spirit:choiceRef="choice_pairs_53749dec" spirit:order="350">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gtwiz_in_core</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gtwiz_in_core" spirit:choiceRef="choice_pairs_3c87fcdb" spirit:order="350.1">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gtcom_in_core</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gtcom_in_core" spirit:choiceRef="choice_pairs_c689c777" spirit:order="350.2">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>dedicate_perst</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.dedicate_perst" spirit:order="326">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>sys_reset_polarity</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.sys_reset_polarity" spirit:choiceRef="choice_list_6eff49bd" spirit:order="327">ACTIVE_LOW</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>mcap_enablement</spirit:name>
      <spirit:displayName>MCAP Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.mcap_enablement" spirit:choiceRef="choice_list_0914ad92" spirit:order="330">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>enable_code</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.enable_code" spirit:order="1.1">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_ch_gt_drp</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_ch_gt_drp" spirit:order="331">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ext_startup_primitive</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ext_startup_primitive" spirit:order="332">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_gt_selection</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_gt_selection" spirit:order="3.5">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>select_quad</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.select_quad" spirit:choiceRef="choice_list_504db607" spirit:order="4.5">GTY_Quad_227</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.select_quad">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>copy_pf0</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.copy_pf0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="6">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>copy_sriov_pf0</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.copy_sriov_pf0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="6.5">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_pm_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_pm_if" spirit:order="433">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pcie_id_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.pcie_id_if" spirit:order="434">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PL_DISABLE_LANE_REVERSAL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.PL_DISABLE_LANE_REVERSAL" spirit:order="435">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MSI_X_OPTIONS</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.MSI_X_OPTIONS" spirit:choiceRef="choice_list_bea500ca" spirit:order="200.1">MSI-X_External</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>completer_model</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.completer_model" spirit:order="436">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_dbg_descramble</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_dbg_descramble" spirit:order="437">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>enable_jtag_dbg</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.enable_jtag_dbg" spirit:order="437.1">TRUE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.enable_jtag_dbg">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tl_credits_cd</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.tl_credits_cd" spirit:order="438">15</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tl_credits_ch</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.tl_credits_ch" spirit:order="439">15</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>set_finite_credit</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.set_finite_credit" spirit:order="440">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen4_eieos_0s7</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.gen4_eieos_0s7" spirit:order="441">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>vu9p_board</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.vu9p_board" spirit:order="442">false</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:displayName>UltraScale+ PCI Express Integrated Block</xilinx:displayName>
      <xilinx:coreRevision>4</xilinx:coreRevision>
      <xilinx:configElementInfos>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.AXISTEN_IF_CQ_ALIGNMENT_MODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.AXISTEN_IF_RQ_ALIGNMENT_MODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.INS_LOSS_NYQ" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.MSI_X_OPTIONS" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_CLASS_CODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_DEVICE_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_INTERRUPT_PIN" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_PBA_BIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_REVISION_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_SUBSYSTEM_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_Use_Class_Code_Lookup_Assistant" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_CLASS_CODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_DEVICE_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_INTERRUPT_PIN" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_MSI_CAP_MULTIMSGCAP" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_REVISION_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_SUBSYSTEM_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_SUBSYSTEM_VENDOR_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF1_Use_Class_Code_Lookup_Assistant" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_CLASS_CODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_DEVICE_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_INTERRUPT_PIN" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_MSI_CAP_MULTIMSGCAP" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_REVISION_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_SUBSYSTEM_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_SUBSYSTEM_VENDOR_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF2_Use_Class_Code_Lookup_Assistant" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_CLASS_CODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_DEVICE_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_INTERRUPT_PIN" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_MSI_CAP_MULTIMSGCAP" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_REVISION_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_SUBSYSTEM_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_SUBSYSTEM_VENDOR_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF3_Use_Class_Code_Lookup_Assistant" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.REF_CLK_FREQ" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.RX_PPM_OFFSET" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.RX_SSC_PPM" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.TL_PF_ENABLE_REG" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_freq" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_enable_client_tag" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_width" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.cfg_ext_if" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.copy_pf0" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.coreclk_freq" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.dedicate_perst" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.device_port_type" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_ch_gt_drp" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_clk" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_gt_selection" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_parity" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_pcie_drp" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_transceiver_status_ports" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.enable_code" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.enable_jtag_dbg" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ext_pcie_cfg_space_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ext_startup_primitive" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.extended_tag_field" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ins_loss_profile" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.mcap_enablement" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.mode_selection" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pcie_blk_locn" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_base_class_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_base" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_sub" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_msix_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_sub_class_interface_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar0_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar0_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar0_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar0_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar0_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar2_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar2_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar2_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar2_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar2_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar4_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar4_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar4_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar4_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar4_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar5_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar5_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar5_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_bar5_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_base_class_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_class_code_base" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_class_code_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_class_code_sub" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_msi_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf1_sub_class_interface_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar0_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar0_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar0_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar0_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar0_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar2_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar2_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar2_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar2_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar2_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar4_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar4_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar4_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar4_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar4_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar5_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar5_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar5_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_bar5_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_base_class_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_class_code_base" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_class_code_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_class_code_sub" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_msi_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf2_sub_class_interface_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar0_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar0_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar0_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar0_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar0_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar2_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar2_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar2_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar2_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar2_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar4_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar4_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar4_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar4_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar4_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar5_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar5_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar5_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_bar5_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_base_class_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_class_code_base" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_class_code_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_class_code_sub" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_msi_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf3_sub_class_interface_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pipe_sim" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.sys_reset_polarity" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.vendor_id" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.vu9p_board" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.xlnx_ref_board" xilinx:valueSource="propagated"/>
      </xilinx:configElementInfos>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2017.1.0</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="89317b49"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="9f513156"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="0e5b9b73"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="81e8cca0"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="909bfa05"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
